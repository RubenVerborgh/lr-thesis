<!DOCTYPE html>
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta charset="utf-8" />
    <title>Structure of Scholarly Information</title>
    <meta content="width=device-width, initial-scale=1" name="viewport" />
    <link href="media/css/basic.css" media="all" rel="stylesheet" title="Basic" />
    <link href="media/css/thesis.css" media="all" rel="stylesheet alternate" title="Thesis" />
    <link href="media/css/lncs.css" media="all" rel="stylesheet alternate" title="LNCS" />
    <link href="media/css/acm.css" media="all" rel="stylesheet alternate" title="ACM" />
    <link href="media/css/do.css" media="all" rel="stylesheet" />
    <link href="media/css/font-awesome.min.css" media="all" rel="stylesheet" />
    <script src="scripts/simplerdf.js"></script>
    <script src="scripts/medium-editor.min.js"></script>
    <script src="scripts/do.js"></script>
  </head>

  <body about="" prefix="rdf: http://www.w3.org/1999/02/22-rdf-syntax-ns# rdfs: http://www.w3.org/2000/01/rdf-schema# owl: http://www.w3.org/2002/07/owl# xsd: http://www.w3.org/2001/XMLSchema# dcterms: http://purl.org/dc/terms/ dctypes: http://purl.org/dc/dcmitype/ foaf: http://xmlns.com/foaf/0.1/ pimspace: http://www.w3.org/ns/pim/space# cc: https://creativecommons.org/ns# skos: http://www.w3.org/2004/02/skos/core# prov: http://www.w3.org/ns/prov# mem: http://mementoweb.org/ns# qb: http://purl.org/linked-data/cube# schema: http://schema.org/ void: http://rdfs.org/ns/void# rsa: http://www.w3.org/ns/auth/rsa# cert: http://www.w3.org/ns/auth/cert# wgs: http://www.w3.org/2003/01/geo/wgs84_pos# bibo: http://purl.org/ontology/bibo/ sioc: http://rdfs.org/sioc/ns# doap: http://usefulinc.com/ns/doap# dbr: http://dbpedia.org/resource/ dbp: http://dbpedia.org/property/ sio: http://semanticscience.org/resource/ opmw: http://www.opmw.org/ontology/ deo: http://purl.org/spar/deo/ doco: http://purl.org/spar/doco/ cito: http://purl.org/spar/cito/ fabio: http://purl.org/spar/fabio/ oa: http://www.w3.org/ns/oa# as: https://www.w3.org/ns/activitystreams# ldp: http://www.w3.org/ns/ldp# solid: http://www.w3.org/ns/solid/terms# acl: http://www.w3.org/ns/auth/acl# dio: https://w3id.org/dio# rel: https://www.w3.org/ns/iana/link-relations/relation#" typeof="schema:CreativeWork sioc:Post prov:Entity">
    <main>
      <article about="" typeof="schema:Article">
        <h1 property="schema:name">Structure of Scholarly Information</h1>

        <div id="authors">
          <dl id="author-name">
            <dt>Authors</dt>
            <dd id="Sarven-Capadisli" inlist="" rel="bibo:authorList" resource="http://csarven.ca/#i"><span about="" rel="schema:creator schema:publisher schema:author"><a about="http://csarven.ca/#i" href="http://csarven.ca/" property="schema:name" rel="schema:url" typeof="schema:Person"><span about="http://csarven.ca/#i"><span property="schema:givenName">Sarven</span> <span property="schema:familyName">Capadisli</span></span></a></span><sup>✊</sup></dd>
          </dl>
        </div>

        <dl id="document-identifier">
          <dt>Identifier</dt>
          <dd><a href="https://linkedresearch.org/article/csarven.ca/structure-of-scholarly-information" rel="owl:sameAs">https://linkedresearch.org/article/csarven.ca/structure-of-scholarly-information</a></dd>
        </dl>

        <dl id="document-created">
          <dt>Created</dt>
          <dd><time content="2017-09-25T00:00:00Z" datatype="xsd:dateTime" datetime="2017-09-25T00:00:00Z" property="schema:dateCreated">2017-09-25</time></dd>
        </dl>

        <dl id="document-published">
          <dt>Published</dt>
          <dd><time content="2017-09-25T00:00:00Z" datatype="xsd:dateTime" datetime="2017-09-25T00:00:00Z" property="schema:datePublished">2017-09-25</time></dd>
        </dl>

        <dl id="document-modified">
          <dt>Modified</dt>
          <dd><time content="2018-03-03T00:00:00Z" datatype="xsd:dateTime" datetime="2018-03-03T00:00:00Z" property="schema:dateModified">2018-03-03</time></dd>
        </dl>
<!-- 
        <dl id="document-latest-version">
          <dt>Latest Version</dt>
          <dd><a href="https://linkedresearch.org/article/csarven.ca/c0d378ce-1ca8-11e8-aece-3b8aec85050b" rel="mem:memento rel:latest-version">https://linkedresearch.org/article/csarven.ca/c0d378ce-1ca8-11e8-aece-3b8aec85050b</a></dd>
        </dl>

        <dl id="document-timemap">
          <dt>TimeMap</dt>
          <dd><a href="https://linkedresearch.org/article/csarven.ca/structure-of-scholarly-information.timemap" rel="mem:timemap">https://linkedresearch.org/article/csarven.ca/structure-of-scholarly-information.timemap</a></dd>
        </dl>

 -->
        <dl id="document-derived-from">
          <dt>Derived From</dt>
          <dd>
            <ul>
              <li><a href="https://dokie.li/docs" rel="prov:wasDerivedFrom">dokieli documentation</a></li>
              <li><a href="http://csarven.ca/this-paper-is-a-demo" rel="prov:wasDerivedFrom">This ‘Paper’ is a Demo</a></li>
              <li><a href="http://csarven.ca/sparqlines-sparql-to-sparkline" rel="prov:wasDerivedFrom">Sparqlines: SPARQL to Sparkline</a></li>
              <li><a href="https://www.w3.org/TR/annotation-html" rel="prov:wasDerivedFrom">Embedding Web Annotations in HTML</a></li>
              <li><a href="https://github.com/linkeddata/dokieli/wiki#examples-in-the-wild" rel="prov:wasDerivedFrom">dokieli Examples in the Wild</a></li>
              <li><a href="https://github.com/ceurws/ceur-make" rel="prov:wasDerivedFrom">ceur-make</a></li>
              <li><a href="http://semstats.org/" rel="prov:wasDerivedFrom">SemStats</a></li>
              <li><a href="https://linkedresearch.org/resources" rel="prov:wasDerivedFrom">Linked Research resources</a></li>
              <li><a href="https://linkedresearch.org/events/eswc2017/" rel="prov:wasDerivedFrom">Enabling Decentralised Scholarly Communication</a></li>
              <li><a href="https://linkedresearch.org/calls" rel="prov:wasDerivedFrom">Call for Linked Research</a></li>
              <li><a href="https://linkedresearch.org/ldn/tests/summary" rel="prov:wasDerivedFrom">LDN Test Reports and Summary</a></li>
              <li><a href="http://csarven.ca/linked-specifications-reports" rel="prov:wasDerivedFrom">Linking Specifications, Test Suites, and Implementation Reports</a></li>
              <li><a href="http://csarven.ca/enabling-accessible-knowledge" rel="prov:wasDerivedFrom">Enabling Accessible Knowledge</a></li>
            </ul>
          </dd>
        </dl>

        <dl id="document-license">
          <dt>License</dt>
          <dd><a href="https://creativecommons.org/licenses/by/4.0/" rel="schema:license" title="Creative Commons Attribution 4.0 Unported">CC BY 4.0</a></dd>
        </dl>
<!--
        <dl id="document-inbox">
          <dt>Notifications Inbox</dt>
          <dd><a href="https://linkedresearch.org/inbox/csarven.ca/c0d378ce-1ca8-11e8-aece-3b8aec85050b/" rel="ldp:inbox">https://linkedresearch.org/inbox/csarven.ca/c0d378ce-1ca8-11e8-aece-3b8aec85050b/</a></dd>
        </dl>

        <dl id="document-annotation-service">
          <dt>Annotation Service</dt>
          <dd><a href="https://linkedresearch.org/annotation/csarven.ca/c0d378ce-1ca8-11e8-aece-3b8aec85050b/" rel="oa:annotationService">https://linkedresearch.org/annotation/csarven.ca/c0d378ce-1ca8-11e8-aece-3b8aec85050b/</a></dd>
        </dl>
-->
        <dl id="document-in-reply-to">
          <dt>In Reply To</dt>
          <dd><a href="https://linkedresearch.org/calls" rel="as:inReplyTo">Call for Linked Research</a></dd>
        </dl>

        <dl id="document-status">
          <dt>Document Status</dt>
          <dd rel="pso:holdsStatusInTime" resource="#31943b7f-b646-4ebd-8787-ec2341e862c1"><span rel="pso:withStatus" resource="http://purl.org/spar/pso/draft" typeof="pso:PublicationStatus">Draft</span></dd>
        </dl>

        <div datatype="rdf:HTML" property="schema:description">
          <section id="information-space" inlist="" rel="schema:hasPart" resource="#information-space">
            <h2 property="schema:name">Information Space</h2>
            <div datatype="rdf:HTML" property="schema:description">
              <p>Given that global strategic research is influenced by policies and industry, we acknowledge that different <em>information spaces</em> can be created by an ensemble of units of information. Such information spaces would serve to facilitate knowledge exchange in the scientific communication market. In this section, we use the LR design principles to materialise and analyse a particular configuration of an information space.</p>

              <p>Figure X depicts a typical high-level interplay between the <em>actors</em> and the <em>content</em> forces, and their functions (registration, awareness, certification, archive) in scholarly communication.</p>

              <figure id="figure-linked-research-ecosystem" rel="schema:hasPart" resource="#figure-linked-research-ecosystem">
                  <object data="/proxy?uri=http://csarven.ca/media/images/articles/linked-research-ecosystem.svg" height="243" rel="schema:image" type="image/svg+xml" width="480"></object>

                  <figcaption property="schema:name">Linked Research ecosystem.</figcaption>
              </figure>

              <p>Here authors create research literature in reply to a call for contributions; reviewers provide feedback on the research results; individuals annotate and re-share the literature; editors filter and assemble a collection of work; archives are notified about the research.</p>

              <p>Given that the <em>applicability</em> is an external force, and that the <em>certification</em> function is applied, eg. peer review, editors' filters, in this, we assume that the demand of applicability of science and technology is part of this information space. We take for granted that each unit of information can independently exist and be accessible for humans and machines from anywhere on the Web, the presence of the <em>accessibility</em> force is active in this information space.</p>

              <p>In the next sections, we take a closer look at the structure and semantics of units.</p>
            </div>
          </section>


<pre class="todo">
Rough coverage:
[x] Structures of knowledge (interlinks between [high-level] entities, data models, information granularity, vocabularies)
[x] History of Scholarly HTML?
[x] Why RDF. Suitability of RDF (in prose). Scope and motivations for RDFa over alternatives.
* RDFa editors (what can/do they produce)
* URIs for prose, concepts, ideas, research sections as deemed important by authors.
* Implementation of embedding prose semantics with dokieli (evaluation).
* Web technologies for authoring, self-publishing; progressive enhancement, alternative presentations, exposing data along with "papers"
* Citations (pulling and reusing external data)
* Embedding data (top-down / bottom-up)
* Embedding statistical and experimental data, and views
* Multimodal active documents
</pre>

          <section id="structure-and-semantics" inlist="" rel="schema:hasPart" resource="#structure-and-semantics">
            <h2 property="schema:name">Structure and Semantics</h2>
            <div datatype="rdf:HTML" property="schema:description">
              <p>Exchanging units of communication between researchers can be a scientific literature, annotation, notification, dataset, workflow, software, compound and dynamic knowledge representation. We focus on the kinds of documents including scientific prose in which researchers create or consume. For example, articles, annotations, notifications, profiles, or social activities would belong in this group, and may include non-narrative (meta)data like scientific observations, workflows, or program code.</p>

              <section id="human-centric-containers-for-units-of-communication" inlist="" rel="schema:hasPart" resource="#human-centric-containers-for-units-of-communication">
                <h3 property="schema:name">Human-centric Containers for Units of Communication</h3>
                <div datatype="rdf:HTML" property="schema:description">
                  <p>We use the term "container" loosely here, and not aligned with <cite><a href="https://w3id.org/ro/">Research Objects</a></cite>'s identifiable container.</p>

                  <dl>
                    <dt>Article</dt>
                    <dd>An article in the most general sense is a scientific contribution contained within a document. For instance, research manuscripts and peer-reviews are different types of articles.</dd>

                    <dt>Annotation</dt>
                    <dd>Annotations include information that is generally about an association between resources with different intentions. For example, commenting, liking, bookmarking, describing, linking, are some of the motivations to annotate an article.</dd>

                    <dt>Notification</dt>
                    <dd>Notifications fulfil the <em>awareness</em> functionality by having its content be about: an announcement of a scientific article; a quality assessment of some literature; reports of observations; annotations or social activities.</dd>

                    <dt>Profiles</dt>
                    <dd>Actors have online profiles where they generally describe themselves or refer to their contacts (address books), or curriculum vitae.</dd>
                  </dl>
                </div>
              </section>


              <section id="human-and-machine-interpretable-information-representation" rel="schema:hasPart" resource="#human-and-machine-interpretable-information-representation">
                <h3>Human and Machine-Interpretable Information Representation</h3>
                <div>
                  <dl>
                    <dt id="rdf-as-base">RDF as base</dt>
                    <dd>
                      <p>The application of the RDF language is the fundamental requirement as atomic statements about scientific information and scholarly activities can be expressed. The language enables the information to be serialised using different syntaxes eg. HTML+RDFa, Turtle. Perhaps most importantly, the underlying data is intended to be manipulated as a <em>graph</em> of things, where its syntactical representations remaining isomorphic across serialisations. While the LR design principles does not mandate a particular serialisation for systems to use - as different environments and documents will have their own needs - we will however discuss a particular arrangement with the goal of understanding a useful balance for human and machine use.</p>
                    </dd>

                    <dt id="units-for-humans-and-machine-use">Units for humans and machine use</dt>
                    <dd>
                      <p>As indicated earlier, the high-level units of communication that we are examining are primarily in the form of prose which may be accompanied with supplemental (meta)data. With this premise, we emphasise on the point that the underlying information is intended for <em>both</em> humans and machines, where each can create and interact with the information through applicable and desired interfaces.</p>
                    </dd>

                    <dt id="content-negotiation-as-optimisation">Content negotiation as optimisation</dt>
                    <dd>
                      <p>While it is feasible, a common practice, and in some cases optimal to have different representations of content with the <em>intention</em> of serving it to humans or machines, eg. through <cite><a href="https://tools.ietf.org/html/rfc2295">Transparent Content Negotiation in HTTP</a></cite>, we can focus on options that provide a commonality while having the lowest the barrier on the server that's making the data available for the purpose of read-write operations. It is important to note here that, user-agents can approach content-negotiation for the purpose of optimisation as opposed to being a rule.</p>
                    </dd>

                    <dt id="rdfa-for-human-and-machines">RDFa for humans and machines</dt>
                    <dd>
                      <p>From the available RDF syntaxes, this line of reasoning naturally brings us to encapsulating information using <cite><a href="https://www.w3.org/TR/rdfa-core/">RDFa</a></cite> - attribute-level extension - inside (X)HTML, and various XML-family languages eg. SVG. What makes <cite><a href="https://www.w3.org/TR/rdfa-in-html/">RDFa in HTML</a></cite>, for instance, an attractive combination is that it maps the RDF data-model which is ideal for machines, while retaining the same document that is interpretable by humans. Essentially, interoperable information exchange and reuse by machines is intended to work over the RDF graph that is expressed through RDFa. Here HTML merely acts as the container to encapsulate the underlying information and to offer presentations and interactions (in regardless of the RDF syntax embedded in HTML).</p>
                    </dd>

                    <dt id="human-machine-readable">Human and machine-readable</dt>
                    <dd>
                      <p>By taking the RDFa in HTML approach, we can have all human-visible content in HTML, and all structured statements be made in context of their content in RDFa. This is optimal in avoiding data duplication in the same document which happens to be the case with the other serialisations in RDF, eg. Turtle or JSON-LD in HTML <code>script</code> blocks. The approach also helps to avoid the creation and usage of multiple data islands, ie. separately for humans and machines. It is efficient in that it has no dependency on JavaScript in order to make the hidden machine-readable content be consumable from a human user interface. For supplemental data, Turtle, JSON-LD, or TriG can always be provided in HTML, however, the primary structured information can expected to be communicated through RDFa.</p>
                    </dd>

                    <dt id="serialisations">Serialisations</dt>
                    <dd>
                      <p id="serialisations">Having the canonical representation for articles, annotations, and notifications in HTML+RDFa, still leaves the servers to provide alternative serialisations, eg. Turtle, and JSON-LD, depending on the content-negotiation between the client and the server. Articles are represented in HTML+RDFa so that information is usable by both humans and machine consumers while maintaining lowest requirements for publishing, eg. a single URL with full content in HTML+RDFa can be accessible from any HTTP server. No additional requirements necessary from clients (eg. JavaScript support and enabled) or servers (eg. additional RDF based content-negotiation). For annotations and notifications, we first meet interoperability requirements (for protocols and vocabularies), and remains flexible about the serialisation that servers prefer.</p>
                    </dd>

                    <dt id="separation-of-concerns">Separation of concerns</dt>
                    <dd>
                      <p>By adopting the <cite>progressive enhancement</cite> strategy for the structural (HTML+RDFa), presentational (CSS), and behavioural (JavaScript) layers, we can allow content and base functionality to be accessible through different media and devices. Ultimately, the unit of communication represented in HTML+RDFa can be accessible - readable - for both humans and machines without requiring any CSS or JavaScript. This approach is considered to cover the base requirement of making the content available with lowest server requirements, ie. anything HTTP server that can serve HTML, and a client that can consume HTML. In essence, a human and machine-interpretable scientific information can be regarded to be usable by <cite><a href="https://en.wikipedia.org/wiki/Text-based_web_browser">text-based web browsers</a></cite>.</p>
                    </dd>

                    <dt class="markup-patterns">Markup patterns</dt>
                    <dd>
                      <p>The use of formal profiles or grammars on the HTML is a common practice for information exchange across well-defined ecosystems. While this sort of a design has the quality of being efficient for cooperating systems, it comes at the cost of wider interoperability. That is, if an application is designed to <em>only</em> work with a particular flavour or subset of HTML, then it would not be able to work with other HTML documents on the Web. Hence, having profiles or grammars in and itself not an issue, however its <em>effects</em> are likely to be that they are less interoperable than they can be. This is in contrast to applications safely ignoring information patterns they do not understand or interested in using, even if they have their preferred internal grammars or HTML templates. From the consuming side, if the application's information <em>reuse</em> is dependent on HTML a specific schema or tree structure, effectively locks the application into coping with those patterns, and ultimately less flexible about handling expressions that the application is unfamiliar with. As for generating content, it is unlikely for existing or future applications to glean machine-readable information without out-of-band transformation workflows, eg. like using <cite><a href="https://www.w3.org/TR/grddl/">Gleaning Resource Descriptions from Dialects of Languages</a></cite> to create custom XSLTs to handle the specific (X)HTML patterns.</p>

                      <p>There are plethora of attempts and approaches in this space. To name a few, most recently the W3C Community Group on <cite><a href="https://www.w3.org/community/scholarlyhtml/">Scholarly HTML</a></cite> with the aim to build a common, open format for the exchange of scholarly information; <cite><a href="https://essepuntato.github.io/papers/rash-peerj2016.html">Research Articles in Simplified HTML</a></cite>; and closely related: <cite><a href="http://www.idpf.org/epub">EPUB</a></cite> as an archive file including all material; <cite><a href="http://jats.niso.org/">Journal Article Tag Suite</a></cite> to describe scientific literature; <cite><a href="http://docbook.org/">DocBook</a></cite> for semantic technical documentation.</p>

                      <div class="note">
                        <h4>Note</h4>
                        <div>
                          <p>For historical and technical reasons, the commonality of these existing approaches is that, they are predominantly designed to address:</p>

                          <ul>
                            <li>print-centric characteristics, as opposed to full Web-centric</li>
                            <li>usage in specific applications, environments, or devices</li>
                            <li>a subset of scholarly information - usually literature, as opposed to annotations or notifications</li>
                            <li>structure and semantics through HTML or XML, as opposed to the RDF layer</li>
                          </ul>

                          <p>With respect to the LR's <a href="linked-research-conceptual-framework#acid-test">acid test</a>, these designs and the applications they enable tend to be inadequate to arrive at an interoperable information space on the Web.</p>
                        </div>
                      </div>
                    </dd>
                  </dl>
                </div>
              </section>

              <section id="vocabularies-and-ontologies" rel="schema:hasPart" resource="#vocabularies-and-ontologies">
                <h3 property="schema:name">Vocabularies and ontologies</h3>
                <div datatype="rdf:HTML" property="schema:description">
                  <p>Expressing the semantics in a way that is machine-interpretable can be achieved through the vocabularies and ontologies like the following:</p>

                  <ul>
                    <li>General purpose: <a href="http://schema.org/">schema.org</a>, <a href="http://purl.org/dc/terms/">DCMI Metadata Terms</a></li>

                    <li>Links to personal storage and user preferences: <a href="http://www.w3.org/ns/ldp">LDP</a> and <a href="http://www.w3.org/ns/solid/terms">Solid</a></li>
                    <li>Access control: <a href="https://www.w3.org/wiki/WebAccessControl">WebAccessControl</a>, <a href="http://www.w3.org/ns/auth/acl">ACL</a></li>

                    <li>Profile: <a href="http://xmlns.com/foaf/0.1/">Friend of a Friend</a></li>
                    <li>Publishing and referencing: <a href="http://purl.org/ontology/bibo/">Bibliographic Ontology Specification</a>, <a href="http://purl.org/spar">Semantic Publishing and Referencing Ontologies</a></li>
                    <li>Annotations: <a href="http://www.w3.org/ns/oa">Web Annotations</a></li>
                    <li>Inbox for notifications: <a href="https://www.w3.org/TR/ldn/">Linked Data Notifications</a> (via LDP)</li>
                    <li>Social activities: <a href="http://rdfs.org/sioc/ns">Semantically-Interlinked Online Communities</a>, <a href="https://www.w3.org/ns/activitystreams">ActivityStreams</a>, <a href="http://purl.org/net/pingback/">Pingback</a></li>


                    <li>Rights and License: <a href="http://creativecommons.org/ns">Creative Commons</a></li>
                    <li>Provenance: <a href="http://www.w3.org/ns/prov">PROV Ontology</a></li>
                    <li>Workflow-centric Research Objects: <a href="http://www.opmw.org/ontology/">OPMW</a>, <a href="http://www.opmw.org/model/p-plan/">P-Plan Ontology</a>, <a href="https://w3id.org/ro/">Wf4Ever Research Object Model</a></li>
                    <li>Design Lifecycle: <a href="https://w3id.org/dio">Design Intent Ontology</a></li>

                    <li>Multi-dimensional data: <a href="https://www.w3.org/TR/vocab-data-cube/">RDF Data Cube vocabulary</a></li>
                    <li>Dataset metadata: <a href="http://rdf-vocabulary.ddialliance.org/discovery.html">DDI-RDF Discovery Vocabulary</a></li>
                    <li>Life Sciences: <a href="http://www.ontobee.org/">Ontobee</a>, eg. <a href="http://semanticscience.org/ontology/sio.owl">Semanticscience Integrated Ontology</a></li>
                  </ul>
                </div>
              </section>
            </div>
          </section>


          <section id="implementation-of-interpretable-information" inlist="" rel="schema:hasPart" resource="#implementation-of-interpretable-information">
            <h2 property="schema:name">Implementation of Interpretable Information</h2>
            <div datatype="rdf:HTML" property="schema:description">
              <p>This section describes dokieli's practices, and offers some guidelines for developers and authors that would like to maintain uniformity in what they create. Consumers of dokieli should not treat the information here as a <em>profile</em>, or as a yet another super or subset of HTML+RDFa when they author or build new functionality. Creating articles, annotations, and notifications in dokieli is intended to be done through its UI, where it takes care of majority of the semantic content generation. The information here however can be useful for authors that would like to combine hand coding with the functionality that dokieli's UI provides. Takeaway what you find useful, there is no proprietary lock-in here.</p>

              <section id="dokieli-documents" inlist="" rel="schema:hasPart" resource="#dokieli-documents">
                <h3 property="schema:name">dokieli documents</h3>
                <div datatype="rdf:HTML" property="schema:description">
                  <p>Is there such thing as a "dokieli" document? Must there be?</p>

                  <dl>
                    <dt>Article</dt>
                    <dd>An article may contain RDF classes like <samp>schema:CreativeWork sioc:Post prov:Entity schema:Article</samp>, otherwise, there is no unique data that would indicate that it is a "dokieli" document. If the HTML+RDFa representation includes do.js and the DOM is ready, the <code>DO</code>: <code>Object { C: {…}, U: {…} }</code> will be available.</dd>

                    <dt>Annotation</dt>
                    <dd>An annotation has the <code>oa:Annotation</code> class. It is possible to know that the article was rendered by dokieli: <code>?s oa:renderedVia &lt;https://dokie.li/&gt;</code>, and we can assume that the annotation was created by it as well. This is not strictly true since that property could have been put there by something else. Annotations represented in HTML+RDFa do not include do.js.</dd>

                    <dt>Notification</dt>
                    <dd>A notification may have one of the following classes: <code>as:Announce</code>, <code>as:Like</code>, <code>as:Dislike</code>, <code>as:Relationship</code>. Notifications represented in HTML+RDFa do not include do.js.</dd>
                  </dl>
                </div>
              </section>

              <section id="html-patterns" inlist="" rel="schema:hasPart" resource="#html-patterns">
                <h3 property="schema:name">HTML patterns</h3>
                <div datatype="rdf:HTML" property="schema:description">
                  <p>One of the goals of dokieli is not to impose arbitrary restrictions on type of nodes as well as the order they should be in HTML+RDFa. It has its own design patterns. It is an ongoing work to make dokieli as flexible as it can be on what it can consume. Ultimately, well-formed and valid HTML - along with accompanying RDFa, Turtle, JSON-LD, TriG etc - is the only requirement here.</p>

                  <dl>
                    <dt id="html-markup-syntax">Markup syntax</dt>
                    <dd>HTML5 <cite><a href="https://www.w3.org/TR/html-polyglot/" rel="cito:citesAsAuthority">Polyglot Markup</a></cite> is used to ensure that when content is processed or served as HTML or XHTML (<code>text/html</code>, <code>application/xhtml+xml</code>), they can generally be used in both HTML and XML ecosystems without further intervention. See also <var>getDocument</var> (do.js) for details on DOM normalisation.</dd>

                    <dt id="html-identifiers">Identifiers</dt>
                    <dd>Unique identifiers (<code>@id</code>) may be placed on any element. Identifiers are auto-generated by normalising some input eg. <code>section</code>s use their heading's text content as input, <code>table</code>s from <code>caption</code>. Anything of importance should have an identifier, and aimed to be included for common patterns out of the box. <code>@id</code> values are reused in RDFa. See also <var>generateAttributeId</var> (do.js) and its application in different places.</dd>

                    <dt id="html-outline">Outline</dt>
                    <dd>
                      <ul>
                        <li><code>title</code> is used.</li>
                        <li><code>main &gt; article</code> (querySelector) is considered to be the location of the primary content.</li>
                        <li><code>h1</code> is typically the first element node after <code>main &gt; article</code></li>
                        <li>There is a resource type, eg. <code>schema:Article</code> that can be found in <code>main &gt; article</code> which is about the article. <code>body</code> may contain broad classes.</li>
                      </ul>
                    </dd>

                    <dt id="html-section">Section</dt>
                    <dd>Sectioning is declared with <code>section</code> and typically have a heading, eg. <code>h2</code> as its first child. Subsections may appear as a child of parent <code>section</code>, or as a child of <code>div</code> (which is a child of parent <code>section</code>), ie. <code>section section</code> or <code>section div section</code>. The headings of subsections are enumerated eg. <code>section h2</code> would have a subsection with <code>section h3</code>. Sections <code>id</code>s and heading text are used to dynamically build the table of contents.
                      <figure class="listing" id="html-section-source" rel="schema:hasPart" resource="#html-section-source">
                        <pre about="#html-section-source" property="schema:description" typeof="fabio:Script"><code class="highlight-section">&lt;section&gt;</code>
<samp class="highlight-h2">  &lt;h2&gt;</samp>
<code class="highlight-div">  &lt;div&gt;</code>
<code class="highlight-section">    &lt;section&gt;</code>
<samp class="highlight-h3">      &lt;h3&gt;</samp>
<code class="highlight-div">      &lt;div&gt;</code>
<code class="highlight-div">      &lt;div&gt;</code>
<code class="highlight-aside">      &lt;aside&gt;</code>
<code class="highlight-section">&lt;section&gt;</code>
<samp class="highlight-h2">  &lt;h2&gt;</samp>
<code class="highlight-section">  &lt;section&gt;</code>
<samp class="highlight-h3">    &lt;h3&gt;</samp></pre>
                        <figcaption property="schema:name"><samp class="highlight-h2">h2</samp> and <samp class="highlight-h3">h3</samp> are used for <code class="highlight-section">section</code> titles, <code class="highlight-div">div</code> as a typical wrapper (eg. for <em>descriptions</em>), as well as to contain further sub-sectioned content.</figcaption>
                      </figure>
                    </dd>

                    <dt id="html-aside">Aside</dt>
                    <dd><code>aside</code>s can technically appear anywhere, but tend to appear as the last element node in <code>section</code>, eg. for related content, footnotes. If the <code>aside</code> is introduced to the DOM via JavaScript for like annotations, they have a similar structure to <code>section</code>.</dd>

                    <dt id="html-div">Division</dt>
                    <dd><code>div</code>s within <code>section</code> are used to wrap a block of arbitrary markup and content. See also RDFa below.</dd>

                    <dt id="html-figure">Figure</dt>
                    <dd><code>figure</code>s typically have <code>figcaptions</code> for things like <code>audio</code>, <code>canvas</code>, <code>iframe</code>, <code>img</code>, <code>object</code>, <code>pre</code>, <code>video</code>, <code>math</code>. For code scripts, <code>figure class="listing"</code> is used, and <code>pre</code> for the code itself with <code>code</code> The <code>listing</code> class is intended to have a collection of figures, which could also have a unique presentation, for example with line numbers or have its caption be prefixed with <q>Listing</q> and counter.

                      <figure class="listing" id="html-figure-listing" rel="schema:hasPart" resource="#html-figure-listing">
                        <pre about="#html-figure-listing" property="schema:description" typeof="fabio:Script"><code class="highlight-section">&lt;section&gt;</code>
<samp class="highlight-h2">  &lt;h2&gt;</samp>
<code class="highlight-div">  &lt;div&gt;</code>
<code class="highlight-section">    &lt;section&gt;</code></pre>
                        <figcaption>Snippet of <a href="#html-section-source">section source</a> code</figcaption>
                      </figure>

                      <table id="comparison-of-systems">
                        <caption>Comparison of systems</caption>
                        <thead>
                          <tr>
                            <th></th>
                            <th>d<sub>1</sub></th>
                            <th>d<sub>2</sub></th>
                            <th>d<sub>3</sub></th>
                            <th>m<sub>1</sub></th>
                          </tr>
                        </thead>
                        <tbody>
                          <tr><th>Foo</th><td>m</td><td>o</td><td>n</td><td>1</td></tr>
                          <tr><th>Bar</th><td>k</td><td>e</td><td>y</td><td>2</td></tr>
                          <tr><th>Baz</th><td>!</td><td>@</td><td>#</td><td>3</td></tr>
                        </tbody>
                        <tfoot>
                          <tr><td colspan="4">Table columns list the dimensions: d<sub>1</sub>, d<sub>2</sub>, d<sub>3</sub>, and the measure: m<sub>1</sub>.</td></tr>
                        </tfoot>
                      </table>
                    </dd>

                    <dt id="html-math">Math</dt>
                    <dd>For mathematical equations <code>figure class="equation"</code> can be used to hint at an equation display. <cite><a href="https://www.w3.org/TR/MathML/">MathML</a></cite> base equation with <code>&lt;math xmlns="http://www.w3.org/1998/Math/MathML"&gt;</code> root can be included here (see also source). Alternatively, if <cite><a href="https://www.mathjax.org/">MathJax</a></cite> JavaScript is available in the document, <cite><a href="https://en.wikibooks.org/wiki/LaTeX/Mathematics">(La)TeX</a></cite>, eg. <samp>\lim_{x \to \infty} \exp(-x) = 0</samp> and <cite><a href="http://asciimath.org/">ASCIIMath</a></cite>, eg. <samp>sum_(i=1)^n i^3=((n(n+1))/2)^2</samp>, syntaxes can be input within the authoring mode (via <cite>Edit</cite>).

                      <figure class="equation" typeof="doco:FormulaBox">
                        <math xmlns="http://www.w3.org/1998/Math/MathML">
                          <mtable>
                            <mtr>
                              <mtd>
                                <munder>
                                  <mi>lim</mi>
                                  <mrow>
                                    <mi>n</mi>
                                    <mo>→</mo>
                                    <mo>∞</mo>
                                  </mrow>
                                </munder>
                                <mi>x</mi>
                                <mo>=</mo>
                                <mn>0</mn>
                              </mtd>
                            </mtr>
                          </mtable>
                        </math>
                      </figure>
                    </dd>

                    <dt id="html-embed-turtle-json-ld-trig">Embedding Turtle, JSON-LD, and TriG</dt>
                    <dd>Turtle, JSON-LD, and TriG syntaxes are placed within respective <code>script</code> blocks in <code>head</code> eg. <code>&lt;script id="meta-json-ld" type="application/ld+json" title="JSON-LD"&gt;&lt;/script&gt;</code>. Data is enclosed in <code>CDATA</code> sections. This pattern is detected, visible and editable from <cite>Embed Data</cite> in <i class="fa fa-bars"></i> <a href="#dokieli-menu">dokieli menu</a>. See also <var>showEmbedData</var> (do.js).</dd>

                    <dt id="html-css">CSS</dt>
                    <dd>Multiple stylesheets can be included with <code>@media</code>, and when accompanied with <code>@title</code>, some user-agents can provide options for the user to switch between them, as well as from the <i class="fa fa-bars"></i> <a href="#dokieli-menu">dokieli menu</a>, eg. <pre>&lt;!-- Primary stylesheet --&gt;
<code>&lt;link href="media/css/basic.css" media="all" rel="stylesheet" title="Basic" /&gt;</code>
&lt;!-- Alternate stylesheet --&gt;
<code>&lt;link href="media/css/acm.css" media="all" rel="stylesheet alternate" title="ACM" /&gt;</code>
&lt;!-- Applied by default--&gt;
<code>&lt;link href="https://dokie.li/media/css/do.css" media="all" rel="stylesheet" /&gt;</code></pre> See also <var>showViews</var> (do.js).</dd>

                    <dt id="html-rdfa">RDFa</dt>
                    <dd>dokieli can consume and produce <cite><a href="https://www.w3.org/TR/rdfa-core/">RDFa Core 1.1</a></cite> syntax.</dd>
                    <dd>To preserve the order of content, <code>@inlist</code> is used eg. <code>&lt;section inlist=""</code>, <code>&lt;dd id="Sarven-Capadisli" inlist="" rel="bibo:authorList" resource="http://csarven.ca/#i"&gt;</code>.</dd>
                    <dd>A <code>section</code>s <code>@id</code> value is used as part of <code>section</code>'s <code>@resource</code> as a fragment, eg. <code>&lt;section id="introduction" rel="schema:hasPart" resource="#introduction"&gt;</code>. This allows the same identifier to be used for humans and machines, the value is derived from normalising its heading value as mentioned earlier.</dd>
                    <dd>Relating parts is done with <code>rel="schema:hasPart"</code>, eg. sections with subsection: <pre><code>&lt;section id="structure-and-semantics" inlist="" rel="schema:hasPart" resource="#structure-and-semantics"&gt;</code>
<code>  &lt;section id="html-patterns" inlist="" rel="schema:hasPart" resource="#html-patterns"&gt;</code></pre>
                    </dd>
                    <dd><code>div</code>s are used to hold a block of HTML markup and types of content together eg. <code>&lt;div datatype="rdf:HTML" property="schema:description" resource="#introduction" typeof="deo:Introduction"&gt;</code> makes it possible to declare that it contains HTML markup, and describes an introductory text.</dd>
                    <dd>Some of the prefixes (<code>@prefix</code>) on the <code>body</code> element are defined in the <cite><a href="https://www.w3.org/2011/rdfa-context/rdfa-1.1.html">RDFa Core Initial Context</a></cite>. These prefixes are defined in dokieli for the purpose of being compact, robust, and to minimise potential errors for consumers.</dd>
                  </dl>

                  <p id="html-charset">Servers should use <code>UTF-8</code> character encoding in their HTTP responses to articles, annotations, and notifications. <code>&lt;meta charset="utf-8" /&gt;</code> is used in HTML.</p>

                  <section id="html-article" inlist="" rel="schema:hasPart" resource="#html-article">
                    <h4 property="schema:name">Article</h4>
                    <div property="schema:description">
                      <p>See also <var>createNoteDataHTML</var> (do.js)</p>

                      <figure class="listing" id="#html-article-source" rel="schema:hasPart" resource="#html-article-source">
                        <pre about="#html-article-source" property="schema:description" typeof="fabio:Script"><code>&lt;!DOCTYPE html&gt;</code>
<code>&lt;html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml"&gt;</code>
<code>  &lt;head&gt;</code>
<code>    &lt;meta charset="utf-8" /&gt;</code>
<code>    &lt;title&gt;&lt;/title&gt;</code>
<code>    &lt;meta content="width=device-width, initial-scale=1" name="viewport" /&gt;</code>
<code>    &lt;link href="https://dokie.li/media/css/basic.css" media="all" rel="stylesheet" title="Basic" /&gt;</code>
<code>    &lt;link href="https://dokie.li/media/css/do.css" media="all" rel="stylesheet" /&gt;</code>
<code>    &lt;link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" media="all" rel="stylesheet" /&gt;</code>
<code>    &lt;script src="https://dokie.li/scripts/simplerdf.js"&gt;&lt;/script&gt;</code>
<code>    &lt;script src="https://dokie.li/scripts/medium-editor.min.js"&gt;&lt;/script&gt;</code>
<code>    &lt;script src="https://dokie.li/scripts/do.js"&gt;&lt;/script&gt;</code>
<code>  &lt;/head&gt;</code>
<code></code>
<code>  &lt;body about="" prefix="rdf: http://www.w3.org/1999/02/22-rdf-syntax-ns# rdfs: http://www.w3.org/2000/01/rdf-schema# owl: http://www.w3.org/2002/07/owl# xsd: http://www.w3.org/2001/XMLSchema# dcterms: http://purl.org/dc/terms/ dctypes: http://purl.org/dc/dcmitype/ foaf: http://xmlns.com/foaf/0.1/ pimspace: http://www.w3.org/ns/pim/space# cc: https://creativecommons.org/ns# skos: http://www.w3.org/2004/02/skos/core# prov: http://www.w3.org/ns/prov# mem: http://mementoweb.org/ns# qb: http://purl.org/linked-data/cube# schema: http://schema.org/ void: http://rdfs.org/ns/void# rsa: http://www.w3.org/ns/auth/rsa# cert: http://www.w3.org/ns/auth/cert# wgs: http://www.w3.org/2003/01/geo/wgs84_pos# bibo: http://purl.org/ontology/bibo/ sioc: http://rdfs.org/sioc/ns# doap: http://usefulinc.com/ns/doap# dbr: http://dbpedia.org/resource/ dbp: http://dbpedia.org/property/ sio: http://semanticscience.org/resource/ opmw: http://www.opmw.org/ontology/ deo: http://purl.org/spar/deo/ doco: http://purl.org/spar/doco/ cito: http://purl.org/spar/cito/ fabio: http://purl.org/spar/fabio/ oa: http://www.w3.org/ns/oa# as: https://www.w3.org/ns/activitystreams# ldp: http://www.w3.org/ns/ldp# solid: http://www.w3.org/ns/solid/terms# acl: http://www.w3.org/ns/auth/acl# dio: https://w3id.org/dio# rel: https://www.w3.org/ns/iana/link-relations/relation#" typeof="schema:CreativeWork sioc:Post prov:Entity"&gt;</code>
<code>    &lt;main&gt;</code>
<code>      &lt;article about="" typeof="schema:Article"&gt;</code>
<code></code>
<code>      &lt;/article&gt;</code>
<code>    &lt;/main&gt;</code>
<code>  &lt;/body&gt;</code>
<code>&lt;/html&gt;</code></pre>
                        <figcaption property="schema:name">Example article HTML</figcaption>
                      </figure>

                      <p>The subject of the following statements may be anywhere in a document. They tend to give some provenance level information and intended to bring more context and attract reuse of the document in different ways.</p>

                      <pre id="html-document-identifier"><code>&lt;dl id="document-identifier"&gt;</code>
<code>  &lt;dt&gt;Identifier&lt;/dt&gt;</code>
<code>  &lt;dd&gt;&lt;a href="http://csarven.ca/dokieli-rww" rel="owl:sameAs">http://csarven.ca/dokieli-rww&lt;/a&gt;&lt;/dd&gt;</code>
<code>&lt;/dl&gt;</code></pre>

                      <p>The <code>owl:sameAs</code> indirectly gives this article, ie. any copy, an identifier. The identifier is typically where an article was originally made accessible from, so having this by default for copy distribution helps to keep its connection to source. </p>

                      <pre id="html-document-inbox"><code>&lt;dl id="document-inbox"&gt;</code>
<code>  &lt;dt&gt;Notifications Inbox&lt;/dt&gt;</code>
<code>  &lt;dd&gt;&lt;a href="https://linkedresearch.org/inbox/csarven.ca/dokieli-rww/" rel="ldp:inbox">inbox/&lt;/a&gt;&lt;/dd&gt;</code>
<code>&lt;/dl&gt;</code></pre>

                      <p><code>ldp:inbox</code> relation gives an article its own Inbox where it can receive notifications about eg. annotations or activities relevant to an article. The notifications can be consumed by applications to offer additional content and interactive possibilities. dokieli can both send and consume notifications by way of discovering an article's inbox. Notifications are created for activities like announcements, creating, (dis)liking, and consumed in order to be displayed in context of available content. The protocol to send and consume notifications in dokieli uses <cite><a href="https://www.w3.org/TR/ldn/">Linked Data Notifications</a></cite>.</p>

                      <pre id="html-document-in-reply-to"><code>&lt;dl id="document-in-reply-to"&gt;</code>
<code>  &lt;dt&gt;In Reply To&lt;/dt&gt;</code>
<code>  &lt;dd&gt;&lt;a href="https://linkedresearch.org/calls" rel="as:inReplyTo"&gt;Call for Linked Research&lt;/a&gt;&lt;/dd&gt;</code>
<code>&lt;/dl&gt;</code></pre>

                      <p>If an article is a reply to objects(s), it can have a property like <code>as:inReplyTo</code>.</p>

                      <pre id="html-document-annotation-service"><code>&lt;dl id="document-annotation-service"&gt;</code>
<code>  &lt;dt&gt;Annotation Service&lt;/dt&gt;</code>
<code>  &lt;dd&gt;&lt;a href="https://linkedresearch.org/annotation/csarven.ca/dokieli-rww/" rel="oa:annotationService"&gt;annotation/&lt;/a&gt;&lt;/dd&gt;</code>
<code>&lt;/dl&gt;</code></pre>

                      <p>An article may refer to an annotation service (<code>oa:annotationService</code>) that conforms to the <cite><a href="https://www.w3.org/TR/annotation-protocol/">Web Annotation Protocol</a></cite>. See also <var>DO.C.AnnotationService</var> in <code>do.js</code>.</p>

                      <pre id="html-document-published-modified"><code>&lt;dl id="document-published"&gt;</code>
<code>  &lt;dt&gt;Published&lt;/dt&gt;</code>
<code>  &lt;dd&gt;&lt;time content="2017-02-27T00:00:00Z" datatype="xsd:dateTime" datetime="2017-02-27T00:00:00Z" property="schema:datePublished">2017-02-27&lt;/time&gt;&lt;/dd&gt;</code>
<code>&lt;/dl&gt;</code>
<code></code>
<code>&lt;dl id="document-modified"&gt;</code>
<code>  &lt;dt&gt;Modified&lt;/dt&gt;</code>
<code>  &lt;dd&gt;&lt;time content="2017-03-12T00:00:00Z" datatype="xsd:dateTime" datetime="2017-03-12T00:00:00Z" property="schema:dateModified"&gt;2017-03-18&lt;/time&gt;&lt;/dd&gt;</code>
<code>&lt;/dl&gt;</code></pre>

                      <p>Dates, you know.. kinda useful. The example above duplicates the ISO date in <code>@content</code> and <code>@datetime</code>, but only one needs to be there, given that there parsers for different RDFa versions.</p>

                      <pre id="html-document-license-rights"><code>&lt;dl id="document-license"&gt;</code>
<code>  &lt;dt&gt;License&lt;/dt&gt;</code>
<code>  &lt;dd&gt;&lt;a href="https://creativecommons.org/licenses/by/4.0/" rel="schema:license" title="Creative Commons Attribution 4.0 Unported"&gt;CC BY 4.0&lt;/a&gt;&lt;/dd&gt;</code>
<code>&lt;/dl&gt;</code></pre>

                      <p>Nice to declare a license or rights to signal under what conditions the document may be reused, reshared or remixed, eg. via <cite><a href="https://creativecommons.org/">Creative Commons</a></cite> license. Articles and notifications tend to use <code>schema:license</code> and annotations use <code>dcterms:rights</code> (given <cite><a href="https://www.w3.org/TR/annotation-vocab/">Web Annotation Vocabulary</a></cite>).</p>

                      <pre id="html-document-derived-from-on"><code>&lt;dl id="document-derived-from"&gt;</code>
<code>  &lt;dt&gt;Derived From&lt;/dt&lt;</code>
<code>  &lt;dd&gt;&lt;a href="https://dokie.li/" rel="prov:wasDerivedFrom">https://dokie.li/&lt;/a&gt;&lt;/dd&gt;</code>
<code>&lt;/dl&gt;</code>
<code></code>
<code>&lt;dl id="document-derived-on"&gt;</code>
<code>  &lt;dt&gt;Derived On&lt;/dt&gt;</code>
<code>  &lt;dd&gt;&lt;time datetime="2017-08-06T00:29:45.342Z"&gt;2017-08-06T00:29:45.342Z&lt;/time&gt;&lt;/dd&gt;</code>
<code>&lt;/dl&gt;</code></pre>

                      <p>If a document is derived from another using the <cite>Save As</cite> operation, derived from and derived on information is declared.</p>

                      <p>The markup for an anonymous profile is like:</p>
<pre id="html-profile-anonymous"><code>&lt;span typeof="schema:Person"&gt;Lunatic Scholar&lt;/span&gt;</code></pre>

                      <p>The markup for a WebID profile including their name:</p>
<pre id="html-profile-iri-name"><code>&lt;span about="http://csarven.ca/#i" property="schema:name"&gt;Sarven Capadisli&lt;/span&gt;</code></pre>

                      <p>If they have an image:</p>
<pre id="html-profile-image"><code>&lt;img alt="" height="48" rel="schema:image" src="http://csarven.ca/media/images/sarven-capadisli.jpg" width="48" /&gt;</code></pre>

                      <p>Progressively described name, image, and URL is useful in templates:</p>
<pre id="html-profile-iri-name-image-enhanced"><code>&lt;span about="http://csarven.ca/#i" typeof="schema:Person"&gt;&lt;img alt="" height="48" rel="schema:image" src="http://csarven.ca/media/images/sarven-capadisli.jpg" width="48" /&gt; &lt;a href="http://csarven.ca/" rel="schema:url"&gt;&lt;span about="http://csarven.ca/#i" property="schema:name"&gt;Sarven Capadisli&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;</code></pre>

                      <p>Alternatively applying the DRY principle:</p>
<pre id="html-profile-iri-name-image-dry"><code>&lt;a about="http://csarven.ca/#i" href="http://csarven.ca/" property="schema:name" rel="schema:url" typeof="schema:Person"&gt;Sarven Capadisli&lt;/a&gt;</code></pre>

                      <p>If they are one of the authors of a document, the profile can be wrapped like:</p>
<pre id="html-profile-author"><code>&lt;dd id="Sarven-Capadisli" inlist="" rel="bibo:authorList" resource="http://csarven.ca/#i"&gt;&lt;span about="" rel="schema:creator schema:publisher schema:author"&gt;&lt;!-- profile --&gt;&lt;/span&gt;&lt;/dd&gt;</code></pre>

                      <p>See also <var>getUserHTML</var> (do.js)</p>
                    </div>
                  </section>

                  <section id="html-annotation" inlist="" rel="schema:hasPart" resource="#html-annotation">
                    <h4 property="schema:name">Annotation</h4>
                    <div property="schema:description">
                      <p>Annotations have their own URL, fetched, parsed, and then introduced into the DOM. They are normally appended at the bottom of a node (<code>section</code>) in which the annotation has a reference to. It is not required to introduce all of the annotation content into the DOM, nor all of it has to be human-visible. This is a run-time inclusion and typically included within <code>&lt;aside class="note do"&gt;&lt;/aside&gt;</code>. Write operations like <cite>Save</cite>, <cite>Save As</cite>, <cite>Export</cite> will exclude this (<code>class~="do"</code>) when it normalises the DOM to HTML.</p>

                      <p>Currently dokieli uses <cite><a href="https://www.w3.org/TR/annotation-vocab/#replying">oa:replying</a></cite>, <cite><a href="https://www.w3.org/TR/annotation-vocab/#commenting">oa:commenting</a></cite>, <cite><a href="https://www.w3.org/TR/annotation-vocab/#describing">oa:describing</a></cite>, <cite><a href="https://www.w3.org/TR/annotation-vocab/#assessing">oa:assessing</a></cite>, <cite><a href="https://www.w3.org/TR/annotation-vocab/#bookmarking">oa:bookmarking</a></cite> for <em>motivations</em>, and <cite><a href="https://www.w3.org/TR/annotation-vocab/#describing">oa:describing</a></cite> and <cite><a href="https://www.w3.org/TR/annotation-vocab/#tagging">oa:tagging</a></cite> for annotation <em>purpose</em>.</p>

                      <p>See also <var>createNoteDataHTML</var> (do.js)</p>

                      <p>Here is an annotation resource at <a href="https://linkedresearch.org/annotation/csarven.ca/dokieli-rww/b6738766-3ce5-4054-96a9-ced7f05b439f">https://linkedresearch.org/annotation/csarven.ca/dokieli-rww/b6738766-3ce5-4054-96a9-ced7f05b439f</a> with all information human-visible and machine-readable (HTML+RDFa):</p>

                      <figure id="html-annotation-view">
                        <object data="https://linkedresearch.org/annotation/csarven.ca/dokieli-rww/b6738766-3ce5-4054-96a9-ced7f05b439f" height="680" type="text/html" width="100%"></object>
                        <figcaption>A reply Web Annotation with replying motivation</figcaption>
                      </figure>

                      <p>Its source:</p>

                      <figure class="listing" id="html-annotation-source" rel="schema:hasPart" resource="#html-annotation-source">
                        <pre about="#html-annotation-source" property="schema:description" typeof="fabio:Script"><code>&lt;!DOCTYPE html&gt;</code>
<code>&lt;html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml"&gt;</code>
<code>  &lt;head&gt;</code>
<code>    &lt;meta charset="utf-8" /&gt;</code>
<code>    &lt;title&gt;https://linkedresearch.org/annotation/csarven.ca/dokieli-rww/b6738766-3ce5-4054-96a9-ced7f05b439f&lt;/title&gt;</code>
<code>  &lt;/head&gt;</code>
<code>  &lt;body&gt;</code>
<code>    &lt;main&gt;</code>
<code>      &lt;article id="b6738766-3ce5-4054-96a9-ced7f05b439f" about="i:" typeof="oa:Annotation" prefix="rdf: http://www.w3.org/1999/02/22-rdf-syntax-ns# schema: http://schema.org/ dcterms: http://purl.org/dc/terms/ oa: http://www.w3.org/ns/oa# as: https://www.w3.org/ns/activitystreams# i: https://linkedresearch.org/annotation/csarven.ca/dokieli-rww/b6738766-3ce5-4054-96a9-ced7f05b439f"&gt;</code>
<code>        &lt;h1 property="schema:name"&gt;Sarven Capadisli &lt;span rel="oa:motivatedBy" resource="oa:replying"&gt;replies&lt;/span&gt;&lt;/h1&gt;</code>
<code></code>
<code>        &lt;dl class="author-name"&gt;</code>
<code>          &lt;dt&gt;Authors&lt;/dt&gt;</code>
<code>          &lt;dd&gt;&lt;span rel="schema:creator"&gt;&lt;span about="http://csarven.ca/#i" typeof="schema:Person"&gt;&lt;img alt="" height="48" rel="schema:image" src="http://csarven.ca/media/images/sarven-capadisli.jpg" width="48" /&gt; &lt;a href="http://csarven.ca/" rel="schema:url"&gt;&lt;span about="http://csarven.ca/#i" property="schema:name"&gt;Sarven Capadisli&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/dd&gt;</code>
<code>        &lt;/dl&gt;</code>
<code></code>
<code>        &lt;dl class="published"&gt;</code>
<code>          &lt;dt&gt;Published&lt;/dt&gt;</code>
<code>          &lt;dd&gt;&lt;a href="https://linkedresearch.org/annotation/csarven.ca/dokieli-rww/b6738766-3ce5-4054-96a9-ced7f05b439f"&gt;&lt;time datetime="2017-04-15T21:24:58.293Z" datatype="xsd:dateTime" property="schema:datePublished" content="2017-04-15T21:24:58.293Z"&gt;2017-04-15 21:24:58&lt;/time&gt;&lt;/a&gt;</code>
<code>          &lt;/dd&gt;</code>
<code>        &lt;/dl&gt;</code>
<code></code>
<code>        &lt;dl class="rights"&gt;</code>
<code>          &lt;dt&gt;Rights&lt;/dt&gt;</code>
<code>          &lt;dd&gt;&lt;a href="https://creativecommons.org/licenses/by/4.0/" rel="dcterms:rights" title="Creative Commons Attribution"&gt;CC BY 4.0&lt;/a&gt;&lt;/dd&gt;</code>
<code>        &lt;/dl&gt;</code>
<code></code>
<code>        &lt;dl class="canonical"&gt;</code>
<code>          &lt;dt&gt;Canonical&lt;/dt&gt;</code>
<code>          &lt;dd about="i:" rel="oa:canonical" resource="urn:uuid:48355bb0-0afd-4f73-9a18-f1e8b6fb415b"&gt;48355bb0-0afd-4f73-9a18-f1e8b6fb415b&lt;/dd&gt;</code>
<code>        &lt;/dl&gt;</code>
<code></code>
<code>        &lt;dl class="target"&gt;</code>
<code>          &lt;dt&gt;&lt;a href="http://csarven.ca/dokieli-rww#abstract" rel="oa:hasTarget"&gt;In reply to&lt;/a&gt; (&lt;a about="http://csarven.ca/dokieli-rww#abstract" href="http://csarven.ca/dokieli-rww" rel="oa:hasSource" typeof="oa:SpecificResource"&gt;part of&lt;/a&gt;)&lt;/dt&gt;</code>
<code>          &lt;dd&gt;</code>
<code>            &lt;blockquote about="http://csarven.ca/dokieli-rww#abstract" cite="http://csarven.ca/dokieli-rww#abstract"&gt;</code>
<code>              &lt;div rel="oa:hasSelector" resource="i:#fragment-selector" typeof="oa:FragmentSelector"&gt;</code>
<code>                &lt;dl class="conformsto"&gt;</code>
<code>                  &lt;dt&gt;Fragment selector conforms to&lt;/dt&gt;</code>
<code>                  &lt;dd&gt;&lt;a property="rdf:value" content="#abstract" xml:lang="" lang="" rel="dcterms:conformsTo" href="https://tools.ietf.org/html/rfc3987"&gt;RFC3987&lt;/a&gt;&lt;/dd&gt;</code>
<code>                &lt;/dl&gt;</code>
<code></code>
<code>                &lt;dl class="refinedby" rel="oa:refinedBy" resource="i:#text-quote-selector" typeof="oa:TextQuoteSelector"&gt;</code>
<code>                  &lt;dt&gt;Refined by&lt;/dt&gt;</code>
<code>                  &lt;dd&gt;&lt;span property="oa:prefix" xml:lang="en" lang="en"&gt;rchitecture and implementation, &lt;/span&gt;&lt;mark property="oa:exact" xml:lang="en" lang="en"&gt;demonstrating advanced document authoring and interaction without a single point of control&lt;/mark&gt;&lt;span property="oa:suffix" xml:lang="en" lang="en"&gt;. Such an environment provides t&lt;/span&gt;&lt;/dd&gt;</code>
<code>                &lt;/dl&gt;</code>
<code>              &lt;/div&gt;</code>
<code>            &lt;/blockquote&gt;</code>
<code>          &lt;/dd&gt;</code>
<code>        &lt;/dl&gt;</code>
<code></code>
<code>        &lt;dl class="renderedvia"&gt;</code>
<code>          &lt;dt&gt;Rendered via&lt;/dt&gt;</code>
<code>          &lt;dd&gt;&lt;a about="http://csarven.ca/dokieli-rww#abstract" href="https://dokie.li/" rel="oa:renderedVia"&gt;dokieli&lt;/a&gt;&lt;/dd&gt;</code>
<code>        &lt;/dl&gt;</code>
<code></code>
<code>        &lt;section id="note-b6738766-3ce5-4054-96a9-ced7f05b439f" rel="oa:hasBody" resource="i:#note-b6738766-3ce5-4054-96a9-ced7f05b439f"&gt;</code>
<code>          &lt;h2 property="schema:name"&gt;Note&lt;/h2&gt;</code>
<code></code>
<code>          &lt;dl class="rights"&gt;</code>
<code>            &lt;dt&gt;Rights&lt;/dt&gt;</code>
<code>            &lt;dd&gt;&lt;a href="https://creativecommons.org/licenses/by/4.0/" rel="dcterms:rights" title="Creative Commons Attribution"&gt;CC BY 4.0&lt;/a&gt;&lt;/dd&gt;</code>
<code>          &lt;/dl&gt;</code>
<code></code>
<code>          &lt;div datatype="rdf:HTML" property="rdf:value schema:description" resource="i:#note-b6738766-3ce5-4054-96a9-ced7f05b439f" typeof="oa:TextualBody"&gt;What are you trying to tell me? That I can dodge bullets?&lt;/div&gt;</code>
<code>        &lt;/section&gt;</code>
<code>      &lt;/article&gt;</code>
<code>    &lt;/main&gt;</code>
<code>  &lt;/body&gt;</code>
<code>&lt;/html&gt;</code></pre>
                        <figcaption property="schema:name">Example annotation HTML</figcaption>
                      </figure>

                      <pre id="html-canonical"><code>&lt;dl class="canonical"&gt;</code>
<code>  &lt;dt&gt;Canonical&lt;/dt&gt;</code>
<code>  &lt;dd rel="oa:canonical" resource="urn:uuid:48355bb0-0afd-4f73-9a18-f1e8b6fb415b">48355bb0-0afd-4f73-9a18-f1e8b6fb415b&lt;/dd&gt;</code>
<code>&lt;/dl&gt;</code></pre>

                      <p><code>oa:canonical</code> refers to a canonical IRI that can be used to deduplicate the annotation. If an user chooses to store their annotation at their personal Webspace as well as when an annotation service (if offered), dokieli treats the resource at personal space as the canonical, and the resource at the annotation service as the copy where it refers to the personal space (<code>oa:via</code>).</p>

                      <p>If an annotation resource is introduced to the article's DOM as part of an <code>aside</code>, they have a structure similar to an <code>article</code>, and may be displayed in different ways, eg. in marginalia:</p>

                      <pre id="html-aside-do"><code>&lt;aside class="note do"&gt;</code>
<code>  &lt;blockquote cite="https://linkedresearch.org/annotation/csarven.ca/dokieli-rww/b6738766-3ce5-4054-96a9-ced7f05b439f"&gt;</code>
<code>    &lt;article about="i:" id="461819979" prefix="i: https://linkedresearch.org/annotation/csarven.ca/dokieli-rww/b6738766-3ce5-4054-96a9-ced7f05b439f" typeof="oa:Annotation"&gt;</code>
<code>    &lt;!-- Reconstruction of the original annotation (from RDF) --&gt;</code>
<code>    &lt;/article&gt;</code>
<code>  &lt;/blockquote&gt;</code>
<code>&lt;/aside&gt;</code></pre>

                      <p>An inline reference to that annotation as aside would have a structure like:</p>

                      <pre id="html-ref-do"><code>&lt;span class="ref do" rel="schema:hasPart" resource="#r-461819979" typeof="dctypes:Text"&gt;&lt;mark id="r-461819979" property="schema:description"&gt;demonstrating advanced document authoring and interaction without a single point of control&lt;/mark&gt;&lt;sup class="ref-annotation"&gt;&lt;a rel="cito:hasReplyFrom" href="#461819979" resource="https://linkedresearch.org/annotation/csarven.ca/dokieli-rww/b6738766-3ce5-4054-96a9-ced7f05b439f"&gt;💬&lt;/a&gt;&lt;/sup&gt;&lt;/span&gt;</code></pre>

                      <p>Note that the human-visible anchor hyperlinks (<samp>#461819979</samp>) to the annotation <code>aside id="461819979"</code>.</p>
                    </div>
                  </section>

                  <section id="html-notification" inlist="" rel="schema:hasPart" resource="#html-notification">
                    <h4 property="schema:name">Notification</h4>
                    <div property="schema:description">
                      <p>Notifications are discovered from <cite><a href="https://www.w3.org/TR/ldn/">LDN</a></cite> Inboxes. An article (or a fragment within) may have an inbox relation (<code>ldp:inbox</code>) which helps dokieli to discover it, and then fetch the notifications.</p>

                      <p>Notifications are intended to be brief, giving sufficient information for consumers to decide if they want use to them. If the notifications are generated by dokieli, eg. via an annotation activity, they typically include some provenance level data like generation date, actor that triggered it, license, where the annotation can be found, what it annotated, and the motivation for it. Notifications will not include the annotation body, but consumers can fetch their URLs (as mentioned in the <a href="#html-annotation">annotation section</a>).</p>

                      <p>See also <var>createNoteDataHTML</var> (do.js)</p>

                      <p>Here is a notification resource at <a href="https://linkedresearch.org/inbox/csarven.ca/dokieli-rww/b6738766-3ce5-4054-96a9-ced7f05b439f">https://linkedresearch.org/inbox/csarven.ca/dokieli-rww/b6738766-3ce5-4054-96a9-ced7f05b439f</a> with all information human-visible and machine-readable (HTML+RDFa):</p>

                      <figure id="html-notification-view">
                        <object data="https://linkedresearch.org/inbox/csarven.ca/dokieli-rww/b6738766-3ce5-4054-96a9-ced7f05b439f" height="420" type="text/html" width="100%"></object>
                        <figcaption>A notification referring to an annotation</figcaption>
                      </figure>

                      <p>Its source:</p>

                      <figure class="listing" id="html-notification-source" rel="schema:hasPart" resource="#html-notification-source">
                        <pre about="#html-notification-source" property="schema:description" typeof="fabio:Script"><code>&lt;!DOCTYPE html&gt;</code>
<code>&lt;html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml"&gt;</code>
<code>  &lt;head&gt;</code>
<code>    &lt;meta charset="utf-8" /&gt;</code>
<code>    &lt;title&gt;Notification: Announced&lt;/title&gt;</code>
<code>  &lt;/head&gt;</code>
<code>  &lt;body prefix="xsd: http://www.w3.org/2001/XMLSchema# rdf: http://www.w3.org/1999/02/22-rdf-syntax-ns# as: https://www.w3.org/ns/activitystreams# oa: http://www.w3.org/ns/oa# schema: http://schema.org/"&gt;</code>
<code>    &lt;main&gt;</code>
<code>      &lt;article&gt;</code>
<code>        &lt;h1&gt;Notification: Announced&lt;/h1&gt;</code>
<code>        &lt;section&gt;</code>
<code>          &lt;dl about=""&gt;</code>
<code>            &lt;dt&gt;Types&lt;/dt&gt;</code>
<code>            &lt;dd&gt;&lt;a about="" href="https://www.w3.org/ns/activitystreams#Announce" typeof="as:Announce"&gt;Announce&lt;/a&gt;&lt;/dd&gt;</code>
<code></code>
<code>            &lt;dt&gt;Object&lt;/dt&gt;</code>
<code>            &lt;dd&gt;&lt;a href="https://linkedresearch.org/annotation/csarven.ca/dokieli-rww/b6738766-3ce5-4054-96a9-ced7f05b439f" property="as:object"&gt;https://linkedresearch.org/annotation/csarven.ca/dokieli-rww/b6738766-3ce5-4054-96a9-ced7f05b439f&lt;/a&gt;&lt;/dd&gt;</code>
<code></code>
<code>            &lt;dt&gt;Target&lt;/dt&gt;</code>
<code>            &lt;dd&gt;&lt;a href="http://csarven.ca/dokieli-rww#abstract" property="as:target"&gt;http://csarven.ca/dokieli-rww#abstract&lt;/a&gt;&lt;/dd&gt;</code>
<code></code>
<code>            &lt;dt&gt;Updated&lt;/dt&gt;</code>
<code>            &lt;dd&gt;&lt;time datetime="2017-04-15T21:31:45.711Z" datatype="xsd:dateTime" property="as:updated" content="2017-04-15T21:31:45.711Z"&gt;2017-04-15 21:31:45&lt;/time&gt;&lt;/dd&gt;</code>
<code></code>
<code>            &lt;dt&gt;Actor&lt;/dt&gt;</code>
<code>            &lt;dd&gt;&lt;a href="http://csarven.ca/#i" property="as:actor"&gt;http://csarven.ca/#i&lt;/a&gt;&lt;/dd&gt;</code>
<code></code>
<code>            &lt;dt&gt;License&lt;/dt&gt;</code>
<code>            &lt;dd&gt;&lt;a href="https://creativecommons.org/publicdomain/zero/1.0/" property="schema:license"&gt;https://creativecommons.org/publicdomain/zero/1.0/&lt;/a&gt;&lt;/dd&gt;</code>
<code>          &lt;/dl&gt;</code>
<code></code>
<code>          &lt;dl about="https://linkedresearch.org/annotation/csarven.ca/dokieli-rww/b6738766-3ce5-4054-96a9-ced7f05b439f"&gt;</code>
<code>            &lt;dt&gt;Object type&lt;/dt&gt;</code>
<code>            &lt;dd&gt;&lt;a about="https://linkedresearch.org/annotation/csarven.ca/dokieli-rww/b6738766-3ce5-4054-96a9-ced7f05b439f" typeof="oa:Annotation" href="http://www.w3.org/ns/oa#Annotation"&gt;Annotation&lt;/a&gt;&lt;/dd&gt;</code>
<code></code>
<code>            &lt;dt&gt;Motivation&lt;/dt&gt;</code>
<code>            &lt;dd&gt;&lt;a href="http://www.w3.org/ns/oa#replying" property="oa:motivation"&gt;replying&lt;/a&gt;&lt;/dd&gt;</code>
<code>          &lt;/dl&gt;</code>
<code>        &lt;/section&gt;</code>
<code>      &lt;/article&gt;</code>
<code>    &lt;/main&gt;</code>
<code>  &lt;/body&gt;</code>
<code>&lt;/html&gt;</code></pre>
                        <figcaption property="schema:name">Example notification HTML</figcaption>
                      </figure>
                    </div>
                  </section>
                </div>
              </section>
            </div>
          </section>



<hr />


<article>
<p><a href="https://dokieli/docs">https://dokieli/docs</a></p>
          <section id="user-interface" inlist="" rel="schema:hasPart" resource="#user-interface">
            <h2 property="schema:name">User interface</h2>
            <div datatype="rdf:HTML" property="schema:description">
              <section id="document-modes" inlist="" rel="schema:hasPart" resource="#document-modes">
                <h3 property="schema:name">Document modes</h3>
                <div datatype="rdf:HTML" property="schema:description">
                  <p>There UI adapts to the <em>document mode</em> the user is in: <cite>author</cite>, <cite>review</cite>, <cite>social</cite>. By default the <cite>social</cite> mode is engaged. The <i class="fa fa-bars"></i> <a href="#dokieli-menu">dokieli menu</a> allows the user to engage the author mode through the <i class="fa fa-i-cursor"></i> <a href="#editor-enable">Edit</a> operation, and the review mode with <i class="fa fa-balance-scale"></i> <a href="#review-enable">Review</a>. See also <var>setDocumentMode</var> (do.js).</p>
                </div>
              </section>

              <section id="dokieli-menu" inlist="" rel="schema:hasPart" resource="#dokieli-menu">
                <h3 property="schema:name">dokieli menu</h3>
                <div datatype="rdf:HTML" property="schema:description">
                  <dl>
                    <dt id="signin-user"><i class="fa fa-user-secret"></i>Sign in</dt>
                    <dd>This is where the user can enter their WebID to let dokieli know about who they are. dokieli fetches their WebID and related information to further help with dokieli's operations. Authentication is not done at this stage.</dd>

                    <dt id="resource-share"><i class="fa fa-bullhorn"></i>Share</dt>
                    <dd>User can share the current article or a part of it with their contacts, automatically discovered via <samp>foaf:knows</samp> as well as traversing equivalent profiles (<code>owl:sameAs</code>). Notification can also be sent to specific targets by entering their IRIs. dokieli sends a notification to the selected targets with information like: who sent it, when, license, motivation.</dd>

                    <dt id="resource-reply"><i class="fa fa-reply"></i>Reply</dt>
                    <dd>An article can be replied with a note and have its own <a href="#resource-license-method">license</a>. To choose the location of the reply, the <a href="#resource-browser-method">resource browser</a> can be used on <a href="#personal-storage">personal storage</a> or an annotation service.</dd>

                    <dt id="review-enable"><i class="fa fa-balance-scale"></i>Review</dt>
                    <dd>This feature changes the <a href="#document-modes">document mode</a> to <cite>Review</cite> and gives different context for annotations. When a user selects a span of text, a toolbar provides the following options to motivations:
                      <dl>
                        <dt><i class="fa fa-thumbs-up"></i>Approve</dt>
                        <dd>General agreement with the selected text. Optional text should specify why it is a strong point or a convincing argument.</dd>
                        <dt><i class="fa fa-thumbs-down"></i>Disapprove</dt>
                        <dd>General disagreement with the selected text. Optional text should specify why it is a weak point, an error, or inaccurate.</dd>
                        <dt><i class="fa fa-crosshairs"></i>Specificity</dt>
                        <dd>Request to increase specificity on selected text. Optional text should indicate that a citation or more specificity is needed.</dd>
                      </dl>
                    </dd>

                    <dt id="resource-new"><i class="fa fa-lightbulb-o"></i>New</dt>
                    <dd>This feature allows a new document to be created at specified location. The new document is constructed based on  If the user is signed in with their WebID and their personal storage location is identifier, the default location for the new resource will have the storage URL (<code>pim:storage</code>) as its base. If the user does not have a WebID and a storage, and if the article refers to an annotation service (<code>oa:annotationService</code>), it will use that URL instead. The URL can be input directly, and otherwise a name will be autogenerated for the resource. This feature uses the <cite><a href="#resource-browser-method">resource browser</a></cite> to navigate HTTP URLs. See also <var>generateAttributeId</var> (do.js). On create, the resulting hyperlink will be shown and a new tab in the browser will be prompted.</dd>

                    <dt id="resource-open"><i class="fa fa-coffee"></i>Open</dt>
                    <dd>Documents can be opened from a local filesystem or by entering an HTTP URL. Both options read the resource's content, and if dokieli's CSS and JavaScript are not present, they are included before updating the DOM and initiating dokieli. This feature uses the <cite><a href="#resource-browser-method">resource browser</a></cite> to navigate HTTP URLs. See also <var>openDocument</var> (do.js).</dd>

                    <dt id="resource-save"><i class="fa fa-life-ring"></i>Save</dt>
                    <dd>This feature makes a <a href="#http-put">write operation</a> (<code>HTTP PUT</code>) request to the current location of the document (<var>window.location</var>). The document is normalised in that dokieli related items are removed from the DOM before making the request.</dd>

                    <dt id="resource-save-as"><i class="fa fa-paper-plane-o"></i>Save As</dt>
                    <dd>The <cite>Save As</cite> operation is similar to <cite>New</cite> for normalising some of the URLs and same as <cite>Save</cite> operation for normalising the DOM before making the request to specified location. If <cite>Derivation data</cite> is checked for inclusion, <a href="#html-document-derived-from-on">derived from and on</a> information is included in the created document. This feature uses the <cite><a href="#resource-browser-method">resource browser</a></cite> to navigate HTTP URLs.</dd>

                    <dt id="resource-export"><i class="fa fa-external-link"></i>Export</dt>
                    <dd>Provides options to 1) exports the article as HTML and save to filesystem, 2) Makes a request to the Internet Archive to crawl all resources references in this article.</dd>

                    <dt id="resource-print"><i class="fa fa-print"></i>Print</dt>
                    <dd>Requests to print the current document (<code>window.print()</code>).</dd>

                    <dt id="editor-enable"><i class="fa fa-i-cursor"></i>Edit</dt>
                    <dd><cite>Editor</cite> is one of the document modes a user can be in. The available features reflect the edit operation. Edits reside in the DOM until a <cite>Save</cite> or <cite>Save As</cite> is triggered. There are several editor features in following categories: content formatting and structuring (<i class="fa fa-header">2</i>, <i class="fa fa-header">3</i>, <i class="fa fa-header">4</i>, <i class="fa fa-italic"></i>, <i class="fa fa-bold"></i>, <i class="fa fa-list-ol"></i>, <i class="fa fa-list-ul"></i>, <b>code</b>, <i class="fa fa-code fa-lg"></i>, <i class="fa fa-picture-o"></i>, <i class="fa fa-table"></i>, <i class="fa fa-link"></i>, <i class="fa fa-quote-right"></i>), including interactive and embeddable objects (<i class="fa fa-line-chart"></i>), inline semantic relations (<i class="fa fa-rocket"></i>), footnotes and citations (<i class="fa fa-hashtag"></i>), and annotations (<i class="fa fa-sticky-note"></i>).
                    </dd>

                    <dt id="resource-source"><i class="fa fa-code"></i>Source</dt>
                    <dd>Users can edit the current state of the article. <em>Updating</em>, only updates the DOM, and leave the saving to <cite>Save</cite> or <cite>Save As</cite>.</dd>

                    <dt id="embed-data-meta"><i class="fa fa-table"></i>Embed Data</dt>
                    <dd>This feature allows hidden RDF data to be stored with the document. Turtle, JSON-LD, and TriG can all be edited and stored independently.</dd>
                  </dl>

                  <p id="base-url-selection-method">To determine the base URL, when new documents are created or saved as, media resources from <var>head link, [src], object[data]</var> (querySelector) will have their URLs normalised to use current document's base URL as its absolute URL (this is the <q>Use references as is</q> option). If <q>Copy to your storage</q> is selected, relative URLs will not be updated as the copy operation reuses the same file paths when resource are copied to destination. The <em>copy</em> operation does an <code>HTTP GET</code> for each source, then <code>HTTP PUT</code> to target.</p>

                  <p id="resource-browser-method">The <em>resource browser</em> eg. available for <cite>New</cite>, <cite>Open</cite>, <cite>Save As</cite> operations can be used to navigate through a Webspace. It does this by using the <cite><a href="https://www.w3.org/TR/ldp/">Linked Data Platform</a></cite>'s containment rules to retrieve and then display the container's index. If the user's personal storage location is known, it will be used as default location for the resource browser. Alternatively, if the article refers to an annotation service, it will be used as start location.</p>

                  <p id="resource-license-method">Users are given a choice to specify the <em>rights and license</em> for their annotations from a list of <cite><a href="https://creativecommons.org/">Creative Commons</a></cite> licenses, eg. <span resource="#annotation-rights" typeof="schema:ChooseAction">CC BY 4.0</span>. If applicable, the notification payload will use the <cite><a href="https://creativecommons.org/publicdomain/zero/1.0/">CC0 1.0 Universal</a></cite> license.</p>

                  <dl>
                    <dt id="dokieli-views"><i class="fa fa-magic"></i>Views</dt>
                    <dd>The dokieli menu will list primary and alternate stylesheets that are <a href="#html-css">detected in HTML</a>. <cite>Native</cite> is always available and it will essentially disable all other stylesheets, thereby user-agent's default stylesheets are gets applied. When a view is selected, eg. <cite>Basic</cite> (which happens to be the one that is used on this article as primary), it becomes the primary stylesheet, and the rest of the stylesheets become alternate and disabled.</dd>
                  </dl>
                </div>
              </section>
            </div>
          </section>

          <section id="http-operations" inlist="" rel="schema:hasPart" resource="#http-operations">
            <h2 property="schema:name">HTTP operations</h2>
            <div datatype="rdf:HTML" property="schema:description">
              <p>dokieli conforms to <cite><a href="https://www.w3.org/TR/ldp/" rel="cito:citesAsAuthority">Linked Data Platform</a></cite> (LDP) protocol for create, update, and delete operations.</p>

              <p id="http-put">Article operations like <cite>New</cite>, <cite>Save</cite>, <cite>Save As</cite>,  <cite>Reply</cite> use <code>HTTP PUT</code>, <cite>Review</cite> and other annotation operations use <code>HTTP POST</code>.</p>

              <p id="http-post">Notifications are sent with <code>HTTP POST</code>. <cite>Save</cite> and <cite>Save As</cite> normalises the HTML before sending.</p>

              <table id="http-request-to-send">
                <caption>Request to send</caption>
                <thead>
                  <tr>
                    <th></th>
                    <th>HTTP method(s)</th>
                    <th><code>Content-Type</code></th>
                  </tr>
                </thead>
                <tbody>
                  <tr><th>Article</th><td><code>PUT</code></td><td><code>text/html</code></td></tr>
                  <tr><th>Annotation</th><td><code>OPTIONS</code>, <code>POST</code></td><td><code>text/html</code>, <code>application/ld+json</code>, <code>text/turtle</code></td></tr>
                  <tr><th>Notification</th><td><code>OPTIONS</code>, <code>POST</code></td><td><code>text/html</code>, <code>application/ld+json</code>, <code>text/turtle</code></td></tr>
                </tbody>
                <tfoot>
                  <tr>
                    <td colspan="3">
                      <dl>
                        <dt id="request-to-send-article">Article</dt>
                        <dd>Articles typically use <code>text/html</code> with embedded RDFa. Where a server implements <code>GET</code> with <code>text/html</code>, and allows <code>PUT</code> for writing, the assumption is that it can allow <code>text/html</code>. In the future, dokieli can check for the <code>Accept-Put</code> header with <code>OPTIONS</code> to determine a suitable type. At this time, HTML+RDFa is an important default for articles.</dd>

                        <dt id="request-to-send-annotation">Annotation</dt>
                        <dd>Annotations use the <code>POST</code> method with <code>Content-Type</code> header value determined by type of location to write to: personal storage space eg. given a profile's <code>pim:storage</code>; made to an annotation service eg. an article's <code>oa:annotationService</code>; sent to profile's outbox's outbox: <code>as:outbox</code>. The <cite><a href="https://www.w3.org/TR/annotation-protocol/">Web Annotation Protocol</a></cite> requires <code>application/ld+json</code> by default. dokieli sends an <code>OPTIONS</code> request to check for the <code>Accept-Post</code> header and sends the payload in one of the serializations that the server prefers. If it is not set, it will fallback to <code>application/ld+json</code> as preferred by Wen Annotation and ActivityPub.</dd>

                        <dt id="request-to-send-notification">Notification</dt>
                        <dd>Notifications use <code>OPTIONS</code> to check the response's <code>Accept-Post</code> HTTP header. If it is set and matches one of the acceptable RDF mediatypes that dokieli can parse, it will use that mediatype to serialize the payload before <code>POST</code>ing. <span rel="schema:hasPart" resource="#dokieli-notification-post-content-type-json-ld">If it is not set, it will fallback to <code>application/ld+json</code> as required by the <cite><a href="https://www.w3.org/TR/ldn/#test-sender-header-post-content-type-json-ld" rel="cito:citesAsAuthority">Linked Data Notifications</a></cite> specification.</span></dd>
                      </dl>
                    </td>
                  </tr>
                </tfoot>
              </table>

              <aside id="http-patch">
                <p>Current reasons for using <code>HTTP POST</code> and <code>PUT</code> instead of <code>PATCH</code>:</p>

                <ul>
                  <li>Servers with <cite><a href="https://tools.ietf.org/html/rfc5261" rel="cito:citesAsAuthority">XML Patch</a></cite> and mediatype <code>application/xml-patch+xml</code> (<cite><a href="https://tools.ietf.org/html/rfc7351" rel="cito:citesAsAuthority">RFC 7351</a></cite>) capability in the Linked Data ecosystem are not well supported.</li>

                  <li><code>HTTP PATCH</code> with <cite><a href="https://www.w3.org/TR/sparql11-update/" rel="cito:citesAsAuthority">SPARQL Update</a></cite> (using mediatype <code>application/sparql-update</code>) would not work for RDFa representations because it would require additional server-side knowledge: HTML+RDFa serializer. This also makes server implementations a dependency for dokieli which is an undesirable design pattern.</li>

                  <li><code>HTTP PATCH</code> can help to optimise HTTP requests provided that the server processes the SPARQL query and eventually publishes the final state of the article. dokieli's use of <code>HTTP POST</code> and <code>HTTP PUT</code> on the other hand does not expect or impose operations other than to store and serve the article. If servers would like to do versioning and how, dokieli leaves it to the servers to decide.</li>
                </ul>
              </aside>

              <p id="http-proxy">Due to <cite><a href="https://www.w3.org/TR/mixed-content/">Mixed Content</a></cite> implementations in Web browsers, ie. <q>fetching of content over unencrypted or unauthenticated connections in the context of an encrypted and authenticated document</q>, is subject to being blocked by the Web browser. Hence, an https document (eg article at https) will not be able to use the contents of an http document (eg. an http WebID). As a workaround, dokieli uses a proxy endpoint by default in order to use the contents of an http resource. An https document fetching an https resource will not use the proxy.</p>
            </div>
          </section>

          <section id="authentication" inlist="" rel="schema:hasPart" resource="#authentication">
            <h2 property="schema:name">Authentication</h2>
            <div datatype="rdf:HTML" property="schema:description">
              <p>dokieli was originally intended to handle different authentication mechanisms. <a href="https://www.w3.org/2005/Incubator/webid/spec/tls/">WebID-TLS</a> is currently supported to authenticate with servers.</p>
            </div>
          </section>

          <section id="storage" inlist="" rel="schema:hasPart" resource="#storage">
            <h2 property="schema:name">Storage</h2>
            <div datatype="rdf:HTML" property="schema:description">
              <dl>
                <dt id="personal-storage">Personal storage</dt>
                <dd>WebID's with <code>pim:storage</code> can get to use their personal online data storage with dokieli's read-write operations, eg all annotations, <cite>Reply</cite>, <cite>Review</cite>, <cite>New</cite>, <cite>Save As</cite>.</dd>

                <dt id="local-storage">Local storage</dt>
                <dd>There is a <cite>Local Storage</cite> feature which uses user-agent's <var>window.localStorage</var>, with default 1m autosave.</dd>
              </dl>
            </div>
          </section>

          <section id="web-extension" inlist="" rel="schema:hasPart" resource="#web-extension">
            <h2 property="schema:name">Web Extension</h2>
            <div datatype="rdf:HTML" property="schema:description">
              <p>The dokieli <cite><a href="https://developer.mozilla.org/en-US/Add-ons/WebExtensions">Web Extension</a></cite> is a minimal package of dokieli which contains the core CSS and JavaScript that works as a browser add-on. When user triggers it from their browser toolbar, it provides the same functionality as a <cite>single-page application</cite>, ie. initialised and rendered in the browser DOM. Currently the extension works with Firefox and Chrome/Chromium browsers. For Firefox, the extension can be packaged with <samp>xpi-pack</samp> and imported from the <cite>Add-ons Manager</cite>. For Chrome/Chromium, the directory can be imported from <cite>Extensions</cite> (developer mode). Alternatively, the extensions are available from <cite><a href="https://addons.mozilla.org/en-US/firefox/addon/dokieli/">Add-ons for Firefox</a></cite> and <cite><a href="https://chrome.google.com/webstore/detail/ddmhaonbhodhgkaljpjlglodncddalid">Chrome Web Store</a></cite>.</p>
            </div>
          </section>
</article>




      <article>
<p><a href="http://csarven.ca/linked-specifications-reports">Linked Specifications, Test Suites, and Implementation Reports</a></p>

          <section id="abstract">
            <h2 property="schema:name">Abstract</h2>
            <div datatype="rdf:HTML" property="schema:abstract">
              <p>This article describes the semantic structure and linking of the W3C Recommendation <cite><a href="https://www.w3.org/TR/ldn/">Linked Data Notifications</a></cite> (LDN), its test suite, and implementation reports.</p>

              <p>Semantically interlinking and detailed machine-readability of components related to Web standards and their implementations is novel, and can be useful for coherently documenting software projects and their conformance with specifications. Everything presented here is open source and reusable by other specifications (W3C standards or not), test suites, and implementations.</p>

              <p>As a concrete example of the benefits of this approach, the LDN test suite is itself an LDN implementation for the purpose of automating the collection and aggregation of implementation reports which were used directly towards the formal standardisation process.</p>
            </div>
          </section>

          <section id="introduction" inlist="" rel="schema:hasPart" resource="#introduction">
            <h2 property="schema:name" resource="#introduction" typeof="#introduction">Introduction</h2>
            <div datatype="rdf:HTML" property="schema:description">
              <p>A technical specification describes a set of requirements for a technology, for example data models, protocols, and application behaviour. The W3C publishes <q>Technical Reports</q> — also known as <q>specifications</q> and sometimes called <q>standards</q> once they are widely adopted. These documents are intended to help different (current or future) implementations to have common core functionality and quality, comply with accessibility and internationalisation guidelines, and take security and privacy considerations into account. When an application, for instance, implements a specification, it can be checked against that specification’s conformance criteria for normative requirements. Specifications are typically accompanied with test suites to assist implementations to identify their conformance level as well as areas for improvement. Similarly, reports and feedback help specifications to improve and advance towards publication. Thus, a specification and conforming implementations are integral to ensuring valid and interoperable applications. In the context of the Web, specifications enable discoverability of data and services, data exchange, and predictability of side effects of certain requests.</p>

              <p>In the wild, specifications and implementation reports are human-readable documents, and commonly the information within them is not machine-readable, at least from the perspective of exposing <cite>Linked Data</cite> on the Web. That is, there is a lack of globally identifiable and discoverable structured data in these documents, and they are not well linked to one another or to other resources on the Web; a machine consumer cannot reliably conduct a <q>follow your nose</q> type of exploration, or provide search mechanisms without considerable customisation per resource. There are HTML templates for specifications which facilitate embedding of some structured data, but they tend to describe items like document level sectioning, references, contributors, or metadata. On the other hand, information on each <em>specification requirement</em> and <em>conformance classifications</em> remain as unstructured prose, or at least geared towards human consumption.</p>

              <p>As for implementation reports, there is even less consistency across the board on how these documents are represented and accessed, let alone any definitive methods for data exchange or information retrieval.</p>

              <p>Having the specifications and implementation reports appropriately interlinked and retrievable can facilitate their automated discovery and reuse. One attainable use case is to be able to find applications that match a certain conformance criteria, eg. in order to have fine-grained bundling of software packages. While this would typically include normative requirements, tests can potentially capture and reveal optional features of specifications. Prospective consumers of the compliance reports can be application developers finding appropriate software for use, as well as automatic software package managers.</p>

              <p>This article describes the development of an interlinked, machine-readable W3C Recommendation, its test suite, and implementation reports as a whole. The W3C specification in question is <cite><a href="https://www.w3.org/TR/ldn/" rel="cito:citesAsEvidence cito:citesAsAuthority">Linked Data Notifications</a></cite> (<abbr title="Linked Data Notifications">LDN</abbr>). The associated automated <cite><a href="https://linkedresearch.org/ldn/tests/" rel="cito:citesAsEvidence">test suite</a></cite> covers each requirement of the specification with individual tests, and the test suite documentation is semantically linked with the specification itself accordingly. Once the tests have been run, the test suite generates a similarly linked implementation report. This report is submitted using LDN itself as the notification mechanism (more on this later). The listing of implementation reports (software conforming to the specification) is thus automatically updated. <a href="#figure-linked-specifications-reports">Figure 1</a> depicts an overview of linking the LDN specification, its test suite, the generated implementation report for the dokieli project, reports summary, and an article citing the specification.</p>

              <figure id="figure-linked-specifications-reports" rel="schema:hasPart" resource="#figure-linked-specifications-reports">
                <object data="http://csarven.ca/media/images/articles/linked-specifications-reports.svg" height="427" rel="schema:image" type="image/svg+xml" width="640"></object>
                <figcaption property="schema:name">An overview of linking a specification, test suite, generated implementation report for the project, reports summary, and an article citing the specification</figcaption>
              </figure>

              <p>The information patterns discussed in the <a href="#specification">specification</a> and the <a href="#implementation-reports">implementation reports</a> sections should be reusable across other specifications and related components. Sources are available from:</p>

              <ul>
                <li>The specification: <a href="https://www.w3.org/TR/ldn/">https://www.w3.org/TR/ldn/</a></li>
                <li>The test suite: <a href="https://linkedresearch.org/ldn/tests/">https://linkedresearch.org/ldn/tests/</a></li>
                <li>Implementation reports summary and individual reports: <a href="https://linkedresearch.org/ldn/tests/summary">https://linkedresearch.org/ldn/tests/summary</a></li>
              </ul>

              <p>The test suite uses <em>mayktso</em> (<a href="https://github.com/csarven/mayktso">https://github.com/csarven/mayktso</a>) as the LDN receiver, but any conformant receiver implementation will work here.</p>

              <p>The prefixes and namespaces that are used in this article are listed under the <a href="#document-convention">document convention</a> section.</p>
            </div>
          </section>

          <section id="related-work" inlist="" rel="schema:hasPart" resource="#related-work">
            <h2 property="schema:name" resource="#discussion" typeof="deo:RelatedWork">Related Work</h2>
            <div datatype="rdf:HTML" property="schema:description">
              <p>Our approach uses existing standards and best practices throughout. Here we have a look at some work relevant to obtaining human and machine-readable specifications and test reports.</p>

              <dl>
                <dt id="generation-of-technical-reports">Generation of technical reports</dt>
                <dd><cite><a href="https://github.com/w3c/respec" rel="cito:citesAsAuthority">ReSpec</a></cite> is a tool for creating technical documents and web standards in HTML(+RDFa) that is commonly used for W3C specifications. There are also various <cite><a href="https://www.rfc-editor.org/pubprocess/tools/" rel="cito:discusses">tools for creating Internet Drafts</a></cite> and publishing them as <abbr title="Request For Comments">RFCs</abbr>, eg. at IETF, IANA. These approaches allow document authors to include structured data eg. in XML, JSON(-LD), in addition to text in prose as input before converting the source format to HTML.</dd>

                <dt id="generation-of-vocabularies">Generation of vocabularies</dt>
                <dd>Web standards often take the form of vocabularies. Some tools to generate the human-readable version of a vocabulary may also include some semantic markup. <a href="https://github.com/dgarijo/Widoco" rel="cito:discusses">Widoco</a> (<cite><a href="http://dgarijo.com/papers/widoco-iswc2017.pdf" rel="cito:citesAsAuthority">A Wizard for Documenting Ontologies</a></cite>) and <a href="http://www.essepuntato.it/lode/" rel="cito:discusses">LODE</a> (<cite><a href="http://speroni.web.cs.unibo.it/publications/peroni-2012-live-documentation-environment.pdf" rel="cito:citesAsAuthority">Live OWL Documentation Environment</a></cite>) focus on describing vocabularies and ontologies, and HTML output. The W3C <cite><a href="https://www.w3.org/TR/prov-o/" rel="cito:citesAsAuthority">PROV Ontology</a></cite>’s term definitions was generated using <a href="https://github.com/timrdf/prov-lodspeakr" rel="cito:discusses">prov-lodspeakr</a> — input being an RDF Turtle with OWL annotations, and the output of HTML sections that was integrated into the specification.</dd>

                <dt id="generation-of-implementation-reports">Generation of implementation reports</dt>
                <dd>The W3C SPARQL 1.1’s Service Description <a href="https://www.w3.org/2009/sparql/docs/tests/" rel="cito:citesAsAuthority">testing process</a> generates implementation reports in RDF/XML and Turtle using the <cite>EARL</cite> vocabulary.</dd>
                <dd>The <cite><a href="https://www.w3.org/TR/shacl/" rel="cito:citesAsAuthority">Shapes Constraint Language</a></cite> (<abbr title="Shapes Constraint Language">SHACL</abbr>) has a <a href="http://w3c.github.io/data-shapes/data-shapes-test-suite/" rel="cito:discusses">test suite and implementation report</a> HTML document (using ReSpec) that defines the format and process of the tests. It refers to individual test reports in Turtle as data dumps accessible from GitHub.</dd>
                <dd>Most closely related to the work described in this article is the W3C <cite><a href="http://rdfa.info/earl-reports/index.html" rel="cito:citesAsAuthority">RDFa 1.1 Processor Conformance</a></cite> that makes EARL reports from test suite available in HTML+RDFa, and alternatively in Turtle and JSON-LD. The tests however reference criteria URIs that do not exist; neither part of the summary document or in the <cite><a href="https://www.w3.org/TR/rdfa-core/" rel="cito:citesAsAuthority">RDFa Core 1.1</a></cite> specification. The same approach is taken in the <cite><a href="https://json-ld.org/test-suite/reports/" rel="cito:discusses">JSON-LD Implementation Report</a></cite>.</dd>
              </dl>

              <p>All of these approaches have and do work well in their respective areas, as well as meeting their target user’s needs. The missing connection among them is that a uniform resource discovery is not possible between the test reports and the individual conformance criteria in the specifications, where a given information at a particular URL is both human and machine-processable.</p>

              <p>We next describe our approach, which links the specification and implementation reports via the test suite itself.</p>
            </div>
          </section>

          <section id="specification" inlist="" rel="schema:hasPart" resource="#specification">
            <h2 property="schema:name">Specification</h2>
            <div datatype="rdf:HTML" property="schema:description">
              <p id="ldn"><cite><a href="https://www.w3.org/TR/ldn">Linked Data Notifications</a></cite> (LDN) is a W3C Recommendation, published in May 2017, which defines a protocol for discovery, creation and reuse of machine-readable notifications over HTTP.</p>

              <p>The W3C process requires the creation of a test suite, and the submission of reports about implementations which pass any or all of the tests. The LDN editors took the liberty to both use this process to exemplify the LDN protocol itself, as well as to generate discoverable Linked Data about the specification and its implementations.</p>

              <p>The LDN <a href="https://www.w3.org/TR/ldn/">technical report</a> has an HTML+RDFa representation. It used existing vocabularies (as of 2017-05). The document is a type of a <code>doap:Specification</code> and it has provenance information such as:</p>

              <ul>
                <li><code>prov:wasRevisionOf</code> for the earlier version of the specification.</li>
                <li><code>schema:datePublished</code> for the publication date.</li>
                <li><code>schema:author</code> and <code>schema:contributor</code> of the document and their partial descriptions.</li>
                <li><code>doap:repository</code> pointing at the specification’s repository, and <code>doap:bug-database</code> for issues.</li>
                <li><code>rdfs:seeAlso</code> for related stuff and the test suite’s location.</li>
                <li><code>as:inReplyTo</code> provides some context for the specification.</li>
                <li><code>xhv:license</code> for license (W3C default).</li>
              </ul>

              <p>This metadata covers what is required by W3C publishing standards.</p>

              <p>It also has some discourse components like <code>schema:abstract</code>, <code>schema:description</code> for each section with <code>schema:name</code> for short labels, and <code>schema:hasPart</code> to relate nested sections. Some sections have specific types, eg. <code>deo:Introduction</code>, <code>deo:Acknowledgements</code>, and <code>skos:Concept</code>.</p>

              <p>In order to specify how the specification’s requirements are linked to from the implementation reports, we need to look at the specification as something that provides the definitions of the concepts which the implementation reports can refer to in their assertions.</p>

              <p>One way to define the shape of the data structure is done with the <cite><a href="https://www.w3.org/TR/vocab-data-cube" rel="cito:citesAsPotentialSolution">RDF Data Cube vocabulary</a></cite> (<abbr title="The RDF Data Cube Vocabulary">QB</abbr>), and the definitions for its components with the <cite><a href="https://www.w3.org/TR/skos-reference/" rel="cito:citesAsPotentialSolution">Simple Knowledge Organization System</a></cite> (<abbr title="Simple Knowledge Organization System">SKOS</abbr>) vocabulary. The <cite><a href="http://www.w3.org/TR/EARL10/" rel="cito:citesAsPotentialSolution">Evaluation and Report Language</a></cite> (<abbr title="Evaluation and Report Language">EARL</abbr>) vocabulary is used to describe the test results and facilitate their exchange between applications.</p>

              <p>The <code>qb:DataStructureDefinition</code> (<abbr title="Data Structure Definition">DSD</abbr>) describes the shape of the multi-dimensional data which will be used in the reports, and is embedded in the LDN specification. In a hypercube, the dimensions serve to identify an observation, and the measure is for the observed value. The DSD is provided in the specification so that systems familiar with the QB vocabulary can have a sense of the structure independently of the actual use of EARL in the reports. Furthermore, alternative test suites can be built reusing the same DSD.</p>

              <figure class="listing" id="code-ldn-dsd" rel="schema:hasPart" resource="#code-ldn-dsd">
                <pre about="#code-ldn-dsd" lang="" property="schema:description" typeof="fabio:Script" xml:lang=""><code id="code-ldn-dsd-1"><a href="https://www.w3.org/TR/ldn/#data-structure-definition">ldn:data-structure-definition</a></code>
<code id="code-ldn-dsd-2">  a qb:DataStructureDefinition ;</code>
<code id="code-ldn-dsd-3">  qb:component</code>
<code id="code-ldn-dsd-4">    [ qb:dimension <span class="highlight-earl-subject">earl:subject</span> ] ,</code>
<code id="code-ldn-dsd-5">    [ qb:dimension <span class="highlight-earl-test">earl:test</span> ] ,</code>
<code id="code-ldn-dsd-6">    [ qb:dimension <span class="highlight-earl-mode">earl:mode</span> ] ,</code>
<code id="code-ldn-dsd-7">    [ qb:measure <span class="highlight-earl-result">earl:result</span> ] .</code></pre>
                <figcaption property="schema:name">A snippet of the data structure definition as defined in the LDN specification in Turtle syntax.</figcaption>
              </figure>

              <p>The 3 dimension properties of type <code>qb:DimensionProperty</code> (ie. <code>earl:subject</code>, <code>earl:test</code>, <code>earl:mode</code>), and 1 measure property is of type <code>qb:MeasureProperty</code> (ie. <code>earl:result</code>):</p>

              <ul>
                <li><code class="highlight-earl-subject">earl:subject</code> for the application that’s being tested.</li>
                <li><code class="highlight-earl-test">earl:test</code> for the test criterion.</li>
                <li><code class="highlight-earl-mode">earl:mode</code> for how the test was conducted.</li>
                <li><code class="highlight-earl-result">earl:result</code> for the test result.</li>
              </ul>

              <p>LDN has conformance classes for each implementation role:  sender, receiver, and consumer. A <code class="highlight-skos-conceptscheme">skos:ConceptScheme</code> is defined per role, and each concept scheme <code class="highlight-skos-hastopconcept">skos:hasTopConcept</code> referring to an individual requirement as a <code class="highlight-skos-concept">skos:Concept</code>. They all have their <code class="highlight-skos-preflabel">skos:prefLabel</code> and <code class="highlight-skos-definition">skos:definition</code>, and encapsulate the human-visible text of the requirements, for example: senders are required to send the <a href="https://www.w3.org/TR/ldn/#test-sender-header-post-content-type-json-ld">payload in JSON-LD</a>.</p>

              <figure class="listing" id="code-ldn-tests-concepts" rel="schema:hasPart" resource="#code-ldn-tests-concepts">
                <pre about="#ldn-tests-concepts" lang="" property="schema:description" typeof="fabio:Script" xml:lang=""><code id="ldn-tests-concepts-1">&lt;&gt;</code>
<code id="ldn-tests-concepts-2">  schema:hasPart ldn:ldn-tests-sender .</code>
<code id="ldn-tests-concepts-4"></code>
<code id="ldn-tests-concepts-3">ldn:ldn-tests-sender</code>
<code id="ldn-tests-concepts-5">  a <span class="highlight-skos-conceptscheme">skos:ConceptScheme</span> ;</code>
<code id="ldn-tests-concepts-6">  <span class="highlight-skos-preflabel">skos:prefLabel</span> "LDN Tests Sender"@en ;</code>
<code id="ldn-tests-concepts-7">  <span class="highlight-skos-hastopconcept">skos:hasTopConcept</span> <a href="https://www.w3.org/TR/ldn/#test-sender-header-post-content-type-json-ld">ldn:test-sender-header-post-content-type-json-ld</a> .</code>
<code id="ldn-tests-concepts-8"></code>
<code id="ldn-tests-concepts-9">ldn:test-sender-header-post-content-type-json-ld</code>
<code id="ldn-tests-concepts-10">  a <span class="highlight-skos-concept">skos:Concept</span> ;</code>
<code id="ldn-tests-concepts-11">  skos:topConceptOf ldn:tests-sender ;</code>
<code id="ldn-tests-concepts-12">  <span class="highlight-skos-definition">skos:definition</span> "the body of the POST request MUST contain the notification payload in JSON-LD with header Content-Type: application/ld+json"@en .</code></pre>
                <figcaption property="schema:name">A snippet of specification requirement in Turtle syntax</figcaption>
              </figure>

              <p>Each requirement represented as a concept has an HTML <code>id</code> attribute and a URI. These URIs correspond with observations’ dimensions values in the test reports.</p>
            </div>
          </section>

          <section id="implementation-reports" inlist="" rel="schema:hasPart" resource="#implementation-reports">
            <h2 property="schema:name">Implementation Reports</h2>
            <div datatype="rdf:HTML" property="schema:description">
              <p>The motivation for the test suite and the generated reports is to have their information equally consumable by human and machines. The human-friendly parts typically have an HTML user interface, and so making them also machine-processable extends their reuse. We do this by incorporating the structured data for the report in the test suite itself so that a report URL can accommodate both cases. This means that the test suite frames its expressions using the EARL and QB vocabularies, resulting in reuse of globally identifiable language — this is in contrast to creating an application-centric language that is virtually disconnected from everything else.</p>

              <p>A test report gets generated when a tester submits the results of running the <cite><a href="https://linkedresearch.org/ldn/tests/" rel="cito:citesAsEvidence">LDN Test Suite</a></cite>. The report contains the outcome of all test criterion as multi-dimensional data for a given type of implementation (sender, receiver, consumer).</p>

              <figure id="figure-dokieli-ldn-implementation-report" rel="schema:hasPart" resource="#figure-dokieli-ldn-implementation-report">
                <img alt="Screenshot of dokieli’s LDN implementation report and test results as a sender" src="http://csarven.ca/media/images/articles/dokieli-ldn-implementation-report.jpg" height="1000" rel="schema:image" width="640" />
                <figcaption property="schema:name">Screenshot of dokieli’s LDN implementation report and test results as a sender</figcaption>
              </figure>

              <p>All reports have their own URLs, and a representation in HTML+RDFa (optionally in other RDF serialisations via content negotiation at this particular test server). See for example <cite><a href="https://dokie.li/" rel="cito:citesAsEvidence">dokieli</a></cite>’s <a href="https://linkedresearch.org/ldn/tests/reports/2c5af2f0-f832-11e6-a642-0dd857219753" rel="cito:citesAsEvidence">implementation report and test results</a> as a sender (<a href="#figure-dokieli-ldn-implementation-report">figure 2</a>). This provides the human-visible information, eg. what was tested and the results also in machine-readable form. The report can be seen as a dataset composed of observations based on the structure that was specified in the specification. Hence, each test report is a <code>qb:DataSet</code> (and generally equivalent in <code>as:Object</code>) where its <code>qb:structure</code> refers to <code>https://www.w3.org/TR/ldn/#data-structure-definition</code>. The dataset has <code>as:published</code> and <code>as:actor</code> for the agent that initiated the test and generated the report. The report may be accompanied with an additional <code>as:summary</code>. An example report at <a class="highlight-observation-url" href="https://linkedresearch.org/ldn/tests/reports/2c5af2f0-f832-11e6-a642-0dd857219753">https://linkedresearch.org/ldn/tests/reports/2c5af2f0-f832-11e6-a642-0dd857219753</a> has the following core information:</p>

              <figure class="listing" id="code-ldn-test-report" rel="schema:hasPart" resource="#code-ldn-test-report">
                <pre about="#code-ldn-test-report" lang="" property="schema:description" typeof="fabio:Script" xml:lang=""><code id="code-ldn-test-report-1">&lt;&gt;</code>
<code id="code-ldn-test-report-2">  a qb:DataSet ;</code>
<code id="code-ldn-test-report-3">  qb:structure <a href="https://www.w3.org/TR/ldn/#data-structure-definition">ldn:data-structure-definition</a> .</code>
<code id="code-ldn-test-report-4"></code>
<code id="code-ldn-test-report-5">&lt;<a class="highlight-observation-url" href="https://linkedresearch.org/ldn/tests/reports/2c5af2f0-f832-11e6-a642-0dd857219753#test-sender-header-post-content-type-json-ld">https://linkedresearch.org/ldn/tests/reports/2c5af2f0-f832-11e6-a642-0dd857219753#test-sender-header-post-content-type-json-ld</a>&gt;</code>
<code id="code-ldn-test-report-6">  a qb:Observation, earl:Assertion ;</code>
<code id="code-ldn-test-report-7">  qb:dataSet &lt;&gt; ;</code>
<code id="code-ldn-test-report-8">  <span class="highlight-earl-subject">earl:subject</span> &lt;<a class="highlight-subject-project" href="https://dokie.li">https://dokie.li/</a>&gt; ;</code>
<code id="code-ldn-test-report-9">  <span class="highlight-earl-test">earl:test</span> <a href="https://www.w3.org/TR/ldn/#test-sender-header-post-content-type-json-ld">ldn:test-sender-header-post-content-type-json-ld</a> ;</code>
<code id="code-ldn-test-report-10">  <span class="highlight-earl-mode">earl:mode</span> earl:automatic ;</code>
<code id="code-ldn-test-report-11">  <span class="highlight-earl-result">earl:result</span> [</code>
<code id="code-ldn-test-report-12">    a earl:TestResult ;</code>
<code id="code-ldn-test-report-13">    <span class="highlight-earl-outcome">earl:outcome</span> earl:passed ;</code>
<code id="code-ldn-test-report-14">    <span class="highlight-earl-info">earl:info</span> "&lt;code&gt;Content-Type: application/ld+json; profile=&amp;quot;http://www.w3.org/ns/anno.jsonld&amp;quot;&lt;/code&gt; received."^^rdf:HTML ] .</code></pre>
                <figcaption property="schema:name">A snippet of a test result dataset and an observation in Turtle syntax</figcaption>
              </figure>

              <p>The test results are provided in an HTML table, where each test is expressed as an <code>qb:Observation</code> (and equivalent <code>earl:Assertion</code>) in RDFa containing:</p>

              <ul>
                <li>a <code class="highlight-earl-subject">earl:subject</code> that refers to the URI of the application, eg. <a class="highlight-subject-project" href="https://dokie.li/">dokieli</a>, a <code>doap:Project</code> as an <a href="https://www.w3.org/TR/ldn/#ldn-sender">LDN Sender</a>.</li>
                <li>a <code class="highlight-earl-test">earl:test</code> with the range being one the requirements (concepts) from the specification.</li>
                <li>a <code class="highlight-earl-mode">earl:mode</code> referring to one of the EARL test modes that were carried out: <a href="https://www.w3.org/TR/EARL10/#automatic">automatic</a>, <a href="https://www.w3.org/TR/EARL10/#manual">manual</a>, <a href="https://www.w3.org/TR/EARL10/#semiAuto">semi-automatic</a>, <a href="https://www.w3.org/TR/EARL10/#undisclosed">undisclosed</a>, <a href="https://www.w3.org/TR/EARL10/#unknownMode">unknown</a>.</li>
                <li>and a <code class="highlight-earl-result">earl:result</code> that gives information on the test <code class="highlight-earl-outcome">earl:outcome</code>: <a href="https://www.w3.org/TR/EARL10-Schema/#passed">passed</a>, <a href="https://www.w3.org/TR/EARL10-Schema/#failed">failed</a>, <a href="https://www.w3.org/TR/EARL10-Schema/#inapplicable">inapplicable</a>, <a href="https://www.w3.org/TR/EARL10-Schema/#cantTell">cannot tell</a>, <a href="https://www.w3.org/TR/EARL10-Schema/#untested">untested</a>, as well as detailed <code class="highlight-earl-info">earl:info</code> about the particular experiment.</li>
              </ul>

              <p>The implementation test report has some basic information linking to the <code>doap:Project</code> with a <code>doap:name</code>, and its <code>doap:maintainer</code>.</p>

              <p>All of the sender, receiver, and consumer reports are available in separate aggregate tables in <cite><a href="https://linkedresearch.org/ldn/tests/summary" rel="cito:citesAsEvidence">LDN Tests Summary</a></cite>. The summary is a <code>void:Dataset</code> where each report is linked as a <code>void:subset</code>. This makes individual reports alternatively findable if the exploration starts from the summary of all test results.</p>
            </div>
          </section>

          <section id="usage" inlist="" rel="schema:hasPart" resource="#usage">
            <h2 property="schema:name">Usage</h2>
            <div datatype="rdf:HTML" property="schema:description">
              <p id="implementation-description">At this point we have the test reports referring to specific parts of the specification. We can continue to further extend this linked data graph with other things. One extension possibility is to describe individual implementations further by stating that they implement the specification, or parts of it. This is a relatively simple exercise of making statements about the project such that it <code>doap:implements</code> the specification: <a href="https://www.w3.org/TR/ldn/">https://www.w3.org/TR/ldn/</a>, which <code>doap:programming-language</code>s it uses, the project’s <code>doap:repository</code> and so on. For more details, see <a href="https://dokie.li/">https://dokie.li/</a> on how the DOAP vocabulary is used as well as a reference to LDN.</p>

              <p id="implementation-conformance">Coming from the direction of the reports, we can also precisely know the conformance level of each implementation. This is useful to deterministically know that an implementation conforms to specification’s core requirements, which is necessary for interoperability, as well as their coverage of the optional features.</p>

              <p id="ldn-test-suites">The LDN Tests Suite puts the LDN protocol into practice by acting as an LDN receiver implementation (based on <cite><a href="https://github.com/csarven/mayktso" rel="cito:citesAsEvidence">mayktso</a></cite>). It also acts as a sender and consumer LDN implementation. Each part of the test suite (for <a href="https://linkedresearch.org/ldn/tests/sender" rel="cito:citesAsEvidence">Senders</a>, <a href="https://linkedresearch.org/ldn/tests/receiver" rel="cito:citesAsEvidence">Receivers</a>, and <a href="https://linkedresearch.org/ldn/tests/consumer" rel="cito:citesAsEvidence">Consumers</a>) advertise an <code>ldp:inbox</code>. Upon completion of a run of the tests, the system generates the report data and sends an LDN notification to the Inbox. The payload of the notification is the full report as RDF.</p>

              <p id="ldn-consumers">As an LDN Consumer, the test suite generates the <a href="https://linkedresearch.org/ldn/tests/summary">summary</a> of the reports by fetching and processing Inbox contents. The notifications are aggregated automatically, and the semantics of the submitted reports are retained.</p>

              <p>Once the notifications are fetched from the reports Inbox, an HTML+RDFa representation (alternatively in other RDF serialisations upon content negotiation) of the response is returned for a human- and machine-readable summary. The services are decoupled; that is, an implementer may generate their report independently of the test suite, and submit it vial the standard LDN protocol. Furthermore, projects can implement their own consumers and reuse the report data generated by the test suite directly, for example to demonstrate to potential users their conformance to the LDN specification.</p>

              <p id="citations">An opportunity arises when the specification is available with structured data by way of having ordinary Web articles simply refer to different sections and concepts. For example, the scholarly article on <cite><a href="http://csarven.ca/linked-data-notifications" rel="cito:citesAsEvidence">Linked Data Notifications</a></cite> uses the <cite><a href="http://purl.org/spar/cito/">CiTO</a></cite> vocabulary to cite the specification with <code>cito:citesAsAuthority</code>. Another peer reviewed article, <cite><a href="http://csarven.ca/dokieli-rww" rel="cito:citesAsEvidence">Decentralised Authoring, Annotations and Notifications for a Read-Write Web with dokieli</a></cite>, contextually cites the specification with <code>cito:citesAsPotentialSolution</code> from its <a href="http://csarven.ca/dokieli-rww#architectural-overview" rel="cito:citesAsEvidence">architectural overview</a> section, as well as the LDN Test Suite with <code>cito:citesAsAuthority</code> from its <a href="http://csarven.ca/dokieli-rww#adoption" rel="cito:citesAsEvidence">adoption</a> section. This is useful in that we can have articles linked to what is already available with minimal effort. Including this article that you are currently reading and interacting with.</p>

              <p>The realisation here is that we have everything operating in a way that is interoperable: the specification, test suite, discovery of the reports, and academic articles, all reusing existing vocabularies.</p>
            </div>
          </section>

          <section id="discussion" inlist="" rel="schema:hasPart" resource="#discussion">
            <h2 property="schema:name" resource="#discussion" typeof="deo:Discussion">Discussion</h2>
            <div datatype="rdf:HTML" property="schema:description">
              <p>The work here can serve as a demonstration or a guideline on what can be achieved by similar types of specifications and test suites. EARL and QB provide the foundations to <q>connect the dots</q> in these documents for the purpose of improving quality assurance, validation, and sharing the output of a working group as structured data on the Web.</p>

              <p>The key takeaways are:</p>

              <ul>
                <li>Human and machine-readable documents via HTML+RDFa are feasible for specifications and implementation reports.</li>
                <li>The connection between EARL and the QB vocabulary is suitable for multi-dimensional data without having to define new component specifications for the data cube.</li>
                <li>Individual observations (test results) can be identified and discovered through contextual links in the specification, with the use of EARL and QB vocabularies.</li>
                <li>The LDN protocol can support the possibility to send, receive and consume notifications about the implementation reports, as well as help with their discovery and reuse.</li>
                <li>It is possible for other documents to refer to specific parts of the specification, test suite and reports.</li>
              </ul>

              <p>We conclude by offering some suggestions to specification editors, test suite builders, and implementers:</p>

              <p>Specification editors should consider taking advantage of the level of expressivity that is possible and reuse the existing human-visible content towards machine-readability.</p>

              <p>It requires a considerable amount of work to devise the shape of test reports, so basing the test suite on EARL and QB can simplify and streamline this process. The approach also benefits from making the reports identifiable, discoverable, exchangeable, and reusable on the Web.</p>

              <p>Lastly, implementations should have machine-readable descriptions, eg. at their homepages, so that the test reports can refer to them and provide the possibility to collect more detailed information about their features.</p>
            </div>
          </section>

          <section id="acknowledgements" inlist="" rel="schema:hasPart" resource="#acknowledgements">
            <h2 property="schema:name" resource="#acknowledgements" typeof="deo:Acknowledgements">Acknowledgements</h2>
            <div datatype="rdf:HTML" property="schema:description">
              <p>The work on the LDN specification and its test suite was done in collaboration with <a href="https://rhiaro.co.uk/#me">Amy Guy</a>. Thanks to <a href="http://mynarz.net/#jindrich">Jindřich Mynarz</a>, <a href="http://soiland-reyes.com/stian/#me">Stian Soiland-Reyes</a>, and <a href="http://www.eurecom.fr/~troncy/">Raphaël Troncy</a> for giving early feedback on this article.</p>
            </div>
          </section>

          <section id="document-convention" inlist="" rel="schema:hasPart" resource="#document-convention">
            <h2 property="schema:name">Document Convention</h2>
            <div datatype="rdf:HTML" property="schema:description">
              <dl>
                <dt><code>as</code></dt>
                <dd><a href="https://www.w3.org/ns/activitystreams">https://www.w3.org/ns/activitystreams#</a></dd>
                <dt><code>cito</code></dt>
                <dd><a href="http://purl.org/spar/cito/">http://purl.org/spar/cito/</a></dd>
                <dt><code>doap</code></dt>
                <dd><a href="http://usefulinc.com/ns/doap">http://usefulinc.com/ns/doap#</a></dd>
                <dt><code>earl</code></dt>
                <dd><a href="http://www.w3.org/ns/earl">http://www.w3.org/ns/earl#</a></dd>
                <dt><code>ldn</code></dt>
                <dd><a href="https://www.w3.org/TR/ldn/">https://www.w3.org/TR/ldn/#</a></dd>
                <dt><code>prov</code></dt>
                <dd><a href="http://www.w3.org/ns/prov">http://www.w3.org/ns/prov#</a></dd>
                <dt><code>qb</code></dt>
                <dd><a href="http://purl.org/linked-data/cube">http://purl.org/linked-data/cube#</a></dd>
                <dt><code>rdf</code></dt>
                <dd><a href="http://www.w3.org/1999/02/22-rdf-syntax-ns">http://www.w3.org/1999/02/22-rdf-syntax-ns#</a></dd>
                <dt><code>schema</code></dt>
                <dd><a href="http://schema.org/">http://schema.org/</a></dd>
                <dt><code>skos</code></dt>
                <dd><a href="http://www.w3.org/2004/02/skos/core">http://www.w3.org/2004/02/skos/core#</a></dd>
                <dt><code>void</code></dt>
                <dd><a href="http://rdfs.org/ns/void">http://rdfs.org/ns/void#</a></dd>
                <dt><code>xhv</code></dt>
                <dd><a href="http://www.w3.org/1999/xhtml/vocab">http://www.w3.org/1999/xhtml/vocab#</a></dd>
              </dl>
            </div>
          </section>
</article>



<hr />




        </div>
      </article>
    </main>
  </body>
</html>
