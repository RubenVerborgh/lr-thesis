<!DOCTYPE html>
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta charset="utf-8" />
    <title>Linked Data Notifications</title>
    <meta content="width=device-width, initial-scale=1" name="viewport" />
    <link href="media/css/basic.css" media="all" rel="stylesheet" title="Basic" />
    <link href="media/css/thesis.css" media="all" rel="stylesheet alternate" title="Thesis" />
    <link href="media/css/lncs.css" media="all" rel="stylesheet alternate" title="LNCS" />
    <link href="media/css/acm.css" media="all" rel="stylesheet alternate" title="ACM" />
    <link href="media/css/do.css" media="all" rel="stylesheet" />
    <script src="scripts/do.js"></script>
  </head>

  <body about="" prefix="rdf: http://www.w3.org/1999/02/22-rdf-syntax-ns# rdfs: http://www.w3.org/2000/01/rdf-schema# owl: http://www.w3.org/2002/07/owl# xsd: http://www.w3.org/2001/XMLSchema# dcterms: http://purl.org/dc/terms/ dctypes: http://purl.org/dc/dcmitype/ foaf: http://xmlns.com/foaf/0.1/ pimspace: http://www.w3.org/ns/pim/space# cc: https://creativecommons.org/ns# skos: http://www.w3.org/2004/02/skos/core# prov: http://www.w3.org/ns/prov# mem: http://mementoweb.org/ns# qb: http://purl.org/linked-data/cube# earl: http://www.w3.org/ns/earl# schema: http://schema.org/ void: http://rdfs.org/ns/void# rsa: http://www.w3.org/ns/auth/rsa# cert: http://www.w3.org/ns/auth/cert# wgs: http://www.w3.org/2003/01/geo/wgs84_pos# bibo: http://purl.org/ontology/bibo/ sioc: http://rdfs.org/sioc/ns# doap: http://usefulinc.com/ns/doap# dbr: http://dbpedia.org/resource/ dbp: http://dbpedia.org/property/ sio: http://semanticscience.org/resource/ opmw: http://www.opmw.org/ontology/ deo: http://purl.org/spar/deo/ doco: http://purl.org/spar/doco/ cito: http://purl.org/spar/cito/ fabio: http://purl.org/spar/fabio/ oa: http://www.w3.org/ns/oa# as: https://www.w3.org/ns/activitystreams# ldp: http://www.w3.org/ns/ldp# solid: http://www.w3.org/ns/solid/terms# acl: http://www.w3.org/ns/auth/acl# dio: https://w3id.org/dio# rel: https://www.w3.org/ns/iana/link-relations/relation#" typeof="schema:CreativeWork sioc:Post prov:Entity">
    <main>
      <article about="" typeof="schema:ScholarlyArticle">
        <h1 property="schema:name">Linked Data Notifications</h1>

        <div datatype="rdf:HTML" property="schema:description">
          <blockquote cite="http://www.chakoteya.net/Voyager/613.htm">
            <dl>
              <dt>JANEWAY</dt><dd>To be honest, we're having a little trouble understanding your technology.</dd>
              <dt>ABARCA</dt><dd>The problem is your technology. Interference from your antiquated scanning devices shut down our propulsion system.</dd>
              <dt>TINCOO</dt><dd>Forgive us, Captain. We live in a closed system. We are not accustomed to interacting with other species, especially inferior ones.</dd>
              <dt>JANEWAY</dt><dd>Well then, I guess we'll leave the repairs in your superior hands.</dd>
            </dl>
            <footer><cite><a data-versiondate="2018-09-12T07:20:21Z" data-versionurl="https://web.archive.org/web/20180912072021/http://www.chakoteya.net/Voyager/613.htm" href="http://www.chakoteya.net/Voyager/613.htm">Virtuoso</a>, Star Trek: Voyager</cite>, 2000</footer>
          </blockquote>

          <p>As scholarly and social content are created and registered, ie. globally identifiable on the Web, they need to be findable in order to be usable. A set of Web-centric standards can meet this requirement en route to fulfilling the registration and awareness functions in research and scientific communication. The specifications pertaining to <a href="decentralising-scholarly-communication#read-write-linked-data">read-write Linked Data</a>, vocabularies about <a href="structure-of-scholarly-information#publishing-and-referencing">publishing resources</a> and <a href="structure-of-scholarly-information#participation">social participation</a> can be combined in various ways to realise a wide array of scholarly and social activities in a decentralised fashion. One of the ways that actors can directly help to make content findable is by announcing its existence to interested parties, as well as from where and how the content can be accessed. From the perspective of an information consumer, content discovery can be accomplished through agreed communication protocols. For example, the <cite><a href="https://tools.ietf.org/html/rfc5322">Internet Message Format</a></cite> (<abbr title="Internet Message Format">RFC 5322</abbr>) specifies message structure and delivery to electronic mailboxes, and recipients can read the messages from their mailboxes. This is a decentralised system in that there is no single authority for all of the mailboxes, and anyone can control their own mailbox. In this section we will focus on a decentralised notification system that works on the HTTP application layer.</p>

          <p>Notifications are sent over the Web for a variety of purposes, including social applications: <q>You have been invited to a vegan lunch!</q>, <q>Guinan annotated your article</q>, <q>Eunice tagged you in a photo</q>. The notification data may be displayed to a human to acknowledge, or used to trigger some other application-specific process (or both).</p>

          <p>In centralised (social) Web systems which prevail today, notifications are structured arbitrarily and typically only usable by sanctioned applications that generated them in the first place. So far, notifications are considered to be <em>ephemeral</em> resources which may disappear after delivery, and thus are not designed for reuse. In such systems, communication and semantic interoperability across independently built applications is not expected. This design however places limitations on possible interactions around a notification. For example, current major social media services on the Web act as disjoint closed ecosystems, commonly known as "<a href="https://en.wikipedia.org/wiki/Closed_platform">walled gardens</a>" in contrast to open platforms with more possibilities for extensibility and reuse of applications and content. In essence, notifications and data are locked into particular systems, and users are restricted to using tightly coupled applications. Such software and systems are only capable of exchanging notifications if they have prior knowledge about the actors involved, location of the data, data formats, and user interfaces. Customarily, switching applications entails switching social providers, and having to create new profiles, and yet-again reconnect or build one's social network in the new system. This scenario is analogous to using an email application that's customised to each service provider, and only being able to send and receive emails from people that use the same provider. In order for information to flow between systems, ie. the degree of data portability, customised communication interfaces needs to be created after their initial implementations, and thus imposing additional maintenance tax for systems to cooperate.</p>

          <p><span id="issue" about="#design-issue" datatype="rdf:HTML" property="schema:description" rel="dio:generatedByIntent" resource="#design-intent" typeof="dio:DesignIssue">In a decentralised architecture, notifications can be a key element for federation of information, and application integration. Current efforts towards <em>re-decentralising</em> the Web [<a class="ref" href="#ref-1">1</a>, <a class="ref" href="#ref-2">2</a>, <a class="ref" href="#ref-3">3</a>] are moving towards architectures in which data storage is decoupled from application logic, freeing end users to switch between applications, or to let multiple applications operate over the same data.</span></p>

          <p><span id="design-intent" about="#design-intent" datatype="rdf:HTML" property="schema:description" rel="dio:generatesIssue" resource="#design-issue" typeof="dio:Intent">We argue that notification data should not be locked into particular systems.</span> Data generated from independently built applications be discoverable and increase their chance for reusability by other applications. Users could choose where to store their notifications, and register their identifiers, as well as using their preferred applications to create, discover, and consume the data.</p>

          <p>We will discuss a communication protocol that specifies how actors and applications can use a decentralised notification system that uses Linked Data to fulfil the <em>registration</em> and <em>awareness</em> functions. Parts of this section is adapted from work published as <cite><a href="http://csarven.ca/linked-data-notifications" rel="prov:wasDerivedFrom">Linked Data Notifications: a resource-centric communication protocol</a></cite>, Capadisli et al, 2017. The work reflects on the W3C <cite><a href="https://www.w3.org/TR/ldn/">Linked Data Notifications</a></cite> technical specification that attains interoperable notification exchange on the Web.</p>

          <section id="use-cases-for-decentralised-notifications" inlist="" rel="schema:hasPart" resource="#use-case-for-decentralised-notifications">
            <h2 property="schema:name">Use Cases for Decentralised Notifications</h2>
            <div datatype="rdf:HTML" property="schema:description">
              <p id="social-web-working-group-user-stories">In 2015, the <cite><a href="https://www.w3.org/Social/WG">W3C Social Web Working Group</a></cite> documented <cite><a data-versiondate="2018-11-17T14:07:32Z" data-versionurl="https://web.archive.org/web/20181117140732/https://www.w3.org/wiki/Socialwg/Social_API/User_stories" href="https://www.w3.org/wiki/Socialwg/Social_API/User_stories">user stories</a></cite> in online social media in the process of producing technical specifications to enable decentralised and federated social communication. The user stories were derived from existing open and proprietary platforms on the Web, including notifications about events, certifications, annotations, requests, and announcements.</p> 

              <p id="linked-data-platform-use-cases-and-requirements">The <cite><a href="https://www.w3.org/TR/ldp-ucr/">Linked Data Platform Use Cases and Requirements</a></cite> (<abbr title="Linked Data Platform Use Cases and Requirements">LDP-UCR</abbr>) documents <q cite="https://www.w3.org/TR/ldp-ucr/#aggregation-and-mashups-of-infrastructure-data">Aggregation and Mashups of Infrastructure Data</q> as one of the user stories and <q cite="https://www.w3.org/TR/ldp-ucr/#uc6">Aggregate resources</q> as the derived use case.</p>

              <p>In addition to general social Web activities, researchers and scholars (actors) perform discipline-centric activities to send (registration), discover (awareness), and reuse public and private notifications (content). To name a few:</p>

<!-- As <persona>, I can <what?> so that <why?> -->
              <dl>
                <dt>Call for contributions</dt>
                <dd>Scenario: The organising committee for a conference would like to make a public announcement that they are now accepting research contributions that can be peer-reviewed.</dd>
                <dd>Requirements:</dd>

                <dt>Publicising an article</dt>
                <dd>Scenario: One of the authors of an article would like to let their colleagues know about the publication.</dd>
                <dd>Requirements:</dd>

                <dt>Request for review</dt>
                <dd>Scenario: The authors of an article wants their work to be reviewed by the members of their community.</dd>
                <dd>Requirements:</dd>

                <dt>Annotating artifacts</dt>
                <dd>Scenario: A reviewer or commenter wants to let the authors of an article know about their feedback.</dd>
                <dd>Requirements:</dd>

                <dt>Authors notify referenced article</dt>
                <dd>Scenario: The authors of an article would like to announce that a reference targets another article so that their article can also be found.</dd>
                <dd>Requirements:</dd>

                <dt>Social actions and reactions</dt>
                <dd>Scenario: Researchers perform public and private actions on resources they come across, including bookmarking, re-sharing with others, announcing their emotional states, as well as following another researchers' activities.</dd>
                <dd>Requirements:</dd>

                <dt>Providing research information</dt>
                <dd>Scenario: A researcher wants to inform the scientific community that the research methods and data sources of their work is publicly available.</dd>
                <dd>Requirements:</dd>

                <dt>State change</dt>
                <dd>Scenario: As automated software detects changes in datasets, new version of an application, anomalies in sensor readings or experimental observations, it informs the laboratory's inbox.</dd>
                <dd>Requirements:</dd>

                <dt>Status update</dt>
                <dd>Scenario: Indexing and archiving systems wants to inform the authors of an article about the recent activities that may be of interest to them, so that they can check for inconsistencies or unintended results.</dd>
                <dd>Requirements:</dd>

                <dt>Artifacts of interest</dt>
                <dd>Scenario: A system upon coming across articles and annotations that is of interest to researchers sends wants to inform them based on their listed interests (research results, disputes over data analysis, new relations between research objects).</dd>
                <dd>Requirements:</dd>
              </dl>



              <p>These requirements for a sender, receiver, consumer overlap with the (non-)functional requirements from LDP-UCR:</p>

              <blockquote cite="https://www.w3.org/TR/ldp-ucr/">
                <ul>
                  <li>F2.1: <a href="https://www.w3.org/TR/ldp-ucr/#dfn-f2.1">The system shall provide the ability to create resources within a container</a></li>
                  <li>F3.1: <a href="https://www.w3.org/TR/ldp-ucr/#dfn-f3.1">The system shall provide the ability to retrieve resource descriptions</a></li>
                  <li>F3.2: <a href="https://www.w3.org/TR/ldp-ucr/#dfn-f3.2">The system shall enable the client to retrieve the description of a hash URI</a></li>
                  <li>F5.1: <a href="https://www.w3.org/TR/ldp-ucr/#dfn-f5.1">The system shall provide the ability to determine if a resource has changed</a></li>
                  <li>F6.1: <a href="https://www.w3.org/TR/ldp-ucr/#dfn-f6.1">The system shall provide the ability to aggregate resources</a></li>
                  <li>F6.2: <a href="https://www.w3.org/TR/ldp-ucr/#dfn-f6.2">The system shall support the addition of a resource to multiple aggregations</a></li>
                  <li>F7.1: <a href="https://www.w3.org/TR/ldp-ucr/#dfn-f7.1">The system shall provide the ability to retrieve a collection-level description of a composition</a></li>
                  <li>F7.2: <a href="https://www.w3.org/TR/ldp-ucr/#dfn-f7.2">The system shall provide the ability to retrieve an item-level description of a composition or aggregation</a></li>
                  <li>F8.1: <a href="https://www.w3.org/TR/ldp-ucr/#dfn-f8.1">The system shall provide the ability to retrieve a paginated description of a composition or aggregation</li>

                  <li>NF2.1: <a href="https://www.w3.org/TR/ldp-ucr/#dfn-nf2.1">The system shall encourage non-duplication of resources</a></li>
                  <li>NF2.2: <a href="https://www.w3.org/TR/ldp-ucr/#dfn-nf2.2">The system shall support distribution of resources</a></li>
                  <li>NF3.1: <a href="https://www.w3.org/TR/ldp-ucr/#dfn-nf3.1">The system shall support the use of standard vocabularies where appropriate</a></li>
                  <li>NF3.2: <a href="https://www.w3.org/TR/ldp-ucr/#dfn-nf3.2">The system shall provide a scalable linking model</a></li>
                  <li>NF4.1: <a href="https://www.w3.org/TR/ldp-ucr/#dfn-nf4.1">The system shall permit unrestricted vocabulary</a></li>
                  <li>NF5.1: <a href="https://www.w3.org/TR/ldp-ucr/#dfn-nf5.1">The LDP shall ensure consistent access in the case of multiple simultaneous attempts to access a resource</a></li>
                  <li>NF6.1: <a href="https://www.w3.org/TR/ldp-ucr/#dfn-nf6.1">The system shall allow resource descriptions that are a "mix of simple data and collections"</a></li>
                  <li>NF6.2: <a href="https://www.w3.org/TR/ldp-ucr/#dfn-nf6.2">The system shall support relative URIs enabling sharing of collections</a>
                </ul>
                <footer><cite><a href="https://www.w3.org/TR/ldp-ucr/">Linked Data Platform Use Cases and Requirements</a></cite>, 2014</footer>
              </blockquote>


              <p>We want to enable the same activities for scholars by way of using their preferred applications to discover and send notifications, as well as to store incoming notifications where they prefer. In addition, it should be possible for users to switch between applications without having to move their data. Lastly, users being able to change the location of their data without having to to change their application.</p>
            </div>
          </section>

          <section id="overview-of-web-notification-systems" inlist="" rel="schema:hasPart" resource="#overview-of-web-notification-systems" typeof="deo:RelatedWork">
            <h2 property="schema:name">Overview of Web Notification Systems</h2>
            <div datatype="rdf:HTML" property="schema:description">
              <p class="todo">Paraphrase? Shorten? From http://csarven.ca/linked-data-notifications#related-work</p>

              <p>Many systems which make use of notifications operate either in a completely centralised way, or are decentralised only in the sense that different instances of the <em>same</em> codebase need to interoperate; we restrict our review to mechanisms which do not expect the notification to be received or used only by the same software or platform which sent it.</p>

              <p>The contents of a notification is either: 1) URLs, indicating relations between Web resources, or 2) a ‘fat ping’ containing a blob of information. Semantic Pingback, Webmention, and Provenance Pingback follow the first form, and are also known as <cite>linkbacks</cite>, the suite of protocols that essentially allows Web documents to automatically reciprocate hyperlinks. This has the advantage that a verification mechanism can be tightly specified (the URL of the target must appear in the content of the source), but the disadvantage that notifications are only available for use cases involving Web publishing.</p>

              <p id="semantic-pingback-and-webmention"><cite><a href="https://aksw.github.io/SemanticPingback/">Semantic Pingback</a></cite> [<a class="ref" href="#ref-2">2</a>] and <cite><a href="https://www.w3.org/TR/webmention">Webmention</a></cite> [<a class="ref" href="#ref-5">5</a>] both update the original <cite><a href="http://www.hixie.ch/specs/pingback/pingback">Pingback</a></cite> [<a class="ref" href="#ref-6">6</a>] mechanism by replacing the XML-RPC transport mechanism by a <code>x-www-form-urlencoded</code> request with two parameters (<code>source</code> and <code>target</code>). Resources which are the target for a notification advertise the respective receiving service or endpoint via a <code>Link</code> relation, either in HTTP headers or HTML. Semantic Pingback additionally enables discovery of the Pingback service where target description is available in RDF. While the content at source may indicate (in any convention or serialisation format) the type of relation between the source and target URLs, this information about the relation is not transmitted to the receiver’s endpoint; only the source and target URLs are sent. As such, there is also no way to deterministically distinguish between multiple mentions of the target at the source based on the information in the mention. Hence, each receiver implementation is subject to interpreting the underlying information at the source, thereby potentially inconsistent across implementations. In contrast, Semantic Pingback does encourage generation of additional semantics about the relation(s) between the source and the target by processing the source as RDF if possible, and also defines specific ways for a receiving server to handle incoming pingback data in order to add the source data to an RDF knowledge base [<a class="ref" href="#ref-2">2</a>]. Beyond verifying that the source contains the URL of the target, Webmention does not specify any further requirements of the receiving server; nor is it expected that “mentions” are retrievable once they have been sent.</p>

              <p id="provenance-pingback">A <cite><a href="http://www.w3.org/TR/prov-aq/#provenance-pingback">Provenance Pingback</a></cite> endpoint is also advertised via the HTTP <code>Link</code> header; it accepts a list of URIs for provenance records describing uses of the resource [<a class="ref" href="#ref-7">7</a>]. Provenance Pingback does not specify any further behaviour by the receiving server, but the contents at the URIs listed in the notification body must be semantic data.</p>

              <p>Other notification mechanisms send more information than just URLs in the notification body; due to each mechanism’s focused use case, the payload is restricted to a particular vocabulary.</p>

              <p><cite><a href="http://www.cibiv.at/~niko/dsnotify/">DSNotify</a></cite> is a centralised service which crawls datasets and observes changes to links with the specific use case of preserving link integrity between Linked Open Data resources. Third-party applications can register with the sending service to receive notifications of changes in the form of a specific XML payload [<a class="ref" href="#ref-8">8</a>].</p>

              <p>With the <cite><a href="https://www.w3.org/2001/sw/wiki/SparqlPuSH">sparqlPuSH</a></cite> service, users may input a SPARQL query, the results of which are the specific updates they are interested in. The query is run periodically by the service, and the results are converted to RSS and Atom feeds, which is sent to a <a href="http://pubsubhubbub.github.io/PubSubHubbub/pubsubhubbub-core-0.4.html">PubSubHubbub</a> hub to which the user can subscribe [<a class="ref" href="#ref-9">9</a>].</p>

              <p>The <cite><a href="http://www.openarchives.org/rs/notification/1.0/notification">ResourceSync Change Notification</a></cite> specification also sends update notifications via a <abbr title="PubSubHubbub">PuSH</abbr> hub, with an XML payload based on the Sitemap format [<a class="ref" href="#ref-10">10</a>].</p>

              <p>Each of these mechanisms are triggered by subscription requests. That is, a user must actively solicit messages from a particular service, rather than having a way for a service to select a notification target and autonomously discover where to send notifications to.</p>

              <p class="todo">In the Evaluation section, we present and discuss a <a href="evaluation#comparison-of-notification-mechanisms">Comparison of Notification Mechanisms</a> to better understand current limitations, and how the proposed protocol addresses them and at what cost.</p>
            </div>
          </section>

          <section id="resource-centric-communication-protocol" inlist="" rel="schema:hasPart" resource="#resource-centric-communication-protocol">
            <h2 property="schema:name">Resource-centric Communication Protocol</h2>
            <div datatype="rdf:HTML" property="schema:description">
              <p>In this section we discuss requirements and design considerations for a decentralised notification protocol that conforms to the Linked Data design principles, as well as best practices for applications. We use these considerations to establish both concrete requirements and points of implementation-specific flexibility for the protocol.</p>

              <p id="modularity"><strong>Modularity</strong>: To encourage modularity of applications, one should differentiate between different classes of implementation of the protocol. Two parties are involved in the creation of a notification: a <em>sender</em>, generating the notification data, and a <em>receiver</em>, storing the created resource. We also have the role of a <em>consumer</em>, which reads the notification data and repurposes it in some way. A software implementation can of course play two or all three of these roles; the important part is that it need not. A consuming application can read and use notification data without being concerned about ever sending or storing notifications.</p>

              <p id="reusability"><strong>Reusability</strong>: The relationship between the <em>consumer</em> and <em>receiver</em> roles is key to notifications being reusable. A consumer must be able to autonomously find the location of notifications for or about the particular resource it is interested in. To achieve this we place a requirement on the receiver to expose notifications it has been sent in such away to permit other applications to access them; and specify how any resource can advertise its receiving endpoint for consumers to discover. To promote fair use or remixing of notification contents, applications can incorporate rights and licensing information into the data. Similarly, applications may include additional information on licensing resources that the notification refers to. The presence of this type of information is important for consumers to assess the (re)usability of data.</p>

              <p id="persistence-and-retrievability"><strong>Persistence and Retrievability</strong>: Given the traditionally ephemeral nature of notifications, here we refer to persistence as units of information that can registered. Applications may benefit from referring to or reusing notifications if the notifications are known to be retrievable in the long term, or indicate their expected lifespan [<a href="decentralising-scholarly-communication#persistence-and-preservation">persistence-and-preservation</a>, <cite><a data-versiondate="2018-11-16T11:48:57Z" data-versionurl="https://web.archive.org/web/20181116114857/http://philarcher.org/diary/2013/uripersistence/" href="http://philarcher.org/diary/2013/uripersistence/">Study on Persistent URIs</a></cite>, <a href="https://www.w3.org/TR/dwbp/#UniqueIdentifiers">Use persistent URIs as identifiers of datasets</a>, <a href="https://tools.ietf.org/html/rfc7089">Memento</a>]. A <em>RESTful architecture</em> is well suited for persistent notifications, as it involves organisation of atomic resources, their discovery and description, and a lightweight API for the <abbr title="create, read, update, and delete">CRUD</abbr> operations [<cite><a href="http://ws-rest.org/2011/proc/a5-page.pdf">REST and Linked Data: a match made for domain driven development?</a></cite>]. This enforces the notion that notifications are considered resources in their own right, with their own dereferencable URIs.</p>

              <p id="adaptability"><strong>Adaptability</strong>: </p>
              <p id="subscribing"><strong>Subscribing</strong>: </p>

              <hr />

              <p class="todo">Linked Data Notifications is a protocol to facilitate exchanging messages between applications which serve as senders, receivers and/or consumers of RDF data.</p>

              <p id="design-intent" about="#design-intent" datatype="rdf:HTML" property="schema:description" rel="dio:generatesIssue" resource="#design-issue" typeof="dio:Intent">We designed the <em>Linked Data Notifications (LDN)</em> protocol to support sharing and reuse of notifications <em>across</em> applications, regardless of how they were generated or what their contents are. We describe how the principles of identification, addressability and semantic representation can be applied to notifications on the Web. Specifying LDN as a formal protocol allows independently implemented, heterogeneous applications which generate and use notifications, to seamlessly work together. Thus, LDN supports the decentralisation of the Web as well as encourages the generation and consumption of Linked Data.</p>

              <p about="#design-decision" datatype="rdf:HTML" property="schema:description" rel="dio:governsDesign" resource="#protocol" typeof="dio:DesignDecision">We build on existing W3C standards and Linked Data principles. In particular, the storage of notifications is compatible with the <cite>Linked Data Platform</cite> standard; notifications are identified by HTTP URIs; and notification contents are available as JSON-LD. A key architectural decision is the separation of concerns between <em>senders</em>, <em>receivers</em>, and <em>consumers</em> of notifications. Implementations of the protocol can play one or more of these roles, and interoperate successfully with implementations playing the complementary roles. This means that notifications generated by one application can be reused by a completely different application, accessed via the store where the notification data resides, through shared Linked Data vocabularies. LDN also pushes the decentralised approach further by allowing any <em>target</em> resource to advertise its Inbox anywhere on the Web; that is, targets do not need to be coupled to or controlled by a receiver, and can make use of a third-party <em>Inbox as a service</em>.<span about="#design-decision" rel="dio:supportedBy"><meta resource="http://csarven.ca/#i" /><meta resource="https://rhiaro.co.uk/#me" /></span></p>

              <p>Beyond a generic understanding of hypermedia, LDN senders and consumers need little to <em>no prior</em> knowledge about how to interact with a server.</p>

              <div about="" id="concept-scheme" rel="schema:hasPart" resource="#concept-scheme">
                <p resource="#concept-scheme" typeof="skos:ConceptScheme"><span property="skos:definition">As the following terms used throughout this article may be subject to different interpretations by different communities, we provide some definitions here.</span></p>

                <p>An <strong about="#concept-inbox" id="concept-inbox" property="skos:prefLabel" rel="skos:topConceptOf" resource="#concept-scheme" typeof="skos:Concept">Inbox</strong> is <span about="#concept-inbox" property="skos:definition">a container or directory (attached to a Web resource) which is used to store and serve a collection of notifications.</span> A <strong about="#concept-notification" id="concept-notification" property="skos:prefLabel" rel="skos:topConceptOf" resource="#concept-scheme" typeof="skos:Concept">notification</strong> is <span about="#concept-notification" property="skos:definition">a retrievable resource which returns RDF. The contents of notifications are intended to describe a change in state of some other resource, or contain new information for the attention of a user or process, and may be subject to constraints of the Inbox it is contained in.</span></p>
              </div>

              <figure id="figure-linked-data-notifications-overview" inlist="" rel="schema:hasPart" resource="#figure-linked-data-notifications-overview">
                <svg viewBox="0 0 420 200" version="1.1" prefix="rdf: http://www.w3.org/1999/02/22-rdf-syntax-ns# rdfs: http://www.w3.org/2000/01/rdf-schema# xsd: http://www.w3.org/2001/XMLSchema# schema: https://schema.org/" xmlns="http://www.w3.org/2000/svg" xml:lang="en" about="" rel="schema:isPartOf" resource="https://www.w3.org/TR/ldn/"><g about="" rel="schema:hasPart" typeof="schema:ImageObject"><metadata about=""><tspan rel="schema:license" resource="https://creativecommons.org/licenses/by/4.0/"></tspan><tspan rel="schema:creator" resource="http://csarven.ca/#i"></tspan></metadata><title about="" property="schema:name">Linked Data Notifications</title><style>.relation{font-size:12px;font-family:monospace;}.predicate{font-style:italic;}.actor{font-size:20px;font-family:sans-serif;}.legend{font-size:8px;font-family:sans-serif;}</style><a about="#target" property="schema:name" rel="rdfs:isDefinedBy" resource="https://www.w3.org/TR/ldn/#discovery" href="https://www.w3.org/TR/ldn/#discovery" target="_top"><text class="actor" x="170" y="19">Target</text></a><a about="#sender" property="schema:name" rel="rdfs:isDefinedBy" resource="https://www.w3.org/TR/ldn/#sender" href="https://www.w3.org/TR/ldn/#sender" target="_top"><text class="actor" x="3" y="68">Sender</text></a><a about="#consumer" property="schema:name" rel="rdfs:isDefinedBy" resource="https://www.w3.org/TR/ldn/#consumer" href="https://www.w3.org/TR/ldn/#consumer" target="_top"><text class="actor" x="316" y="70">Consumer</text></a><a about="#receiver" property="schema:name" rel="rdfs:isDefinedBy" resource="https://www.w3.org/TR/ldn/#receiver" href="https://www.w3.org/TR/ldn/#receiver" target="_top"><text class="actor" x="57" y="153">Receiver</text></a><a about="#get" property="schema:name" rel="rdfs:isDefinedBy" resource="https://tools.ietf.org/html/rfc7231#section-4.3.1" href="https://tools.ietf.org/html/rfc7231#section-4.3.1" target="_top"><text class="relation http" x="81" y="34">GET</text></a><a about="#head" property="schema:name" rel="rdfs:isDefinedBy" resource="https://tools.ietf.org/html/rfc7231#section-4.3.2" href="https://tools.ietf.org/html/rfc7231#section-4.3.2" target="_top"><text class="relation http" x="100" y="50">HEAD</text></a><a href="https://tools.ietf.org/html/rfc7231#section-4.3.1" target="_top"><text class="relation http" x="286" y="34">GET</text></a><a href="https://tools.ietf.org/html/rfc7231#section-4.3.2" target="_top"><text class="relation http" x="259" y="50">HEAD</text></a><a about="#post" property="schema:name" rel="rdfs:isDefinedBy" resource="https://tools.ietf.org/html/rfc7231#section-4.3.3" href="https://tools.ietf.org/html/rfc7231#section-4.3.3" target="_top"><text class="relation http" x="62" y="92">POST</text></a><a href="https://tools.ietf.org/html/rfc7231#section-4.3.1" target="_top"><text class="relation http" x="300" y="94">GET</text></a><a about="#ldp-inbox" property="schema:name" rel="rdfs:isDefinedBy" resource="https://www.w3.org/ns/ldp#inbox" href="https://www.w3.org/ns/ldp#inbox" target="_top"><text class="relation predicate" x="166" y="67">ldp:inbox</text></a><a about="#ldp-contains" property="schema:name" rel="rdfs:isDefinedBy" resource="https://www.w3.org/ns/ldp#contains" href="https://www.w3.org/ns/ldp#contains" target="_top"><text class="relation predicate" x="166" y="153">ldp:contains</text></a><a about="#discovery" property="schema:name" rel="rdfs:isDefinedBy" resource="https://www.w3.org/TR/ldn/#discovery" href="https://www.w3.org/TR/ldn/#discovery" target="_top"><text class="actor" x="175" y="122">Inbox</text></a><a about="#notification" property="schema:name" rel="rdfs:isDefinedBy" resource="https://www.w3.org/TR/ldn/#introduction" href="https://www.w3.org/TR/ldn/#introduction" target="_top"><text class="actor" x="171" y="188">Notification</text></a><text class="legend" x="310" y="182">Linked Data Notifications</text><a href="https://www.w3.org/TR/ldn/"><text class="legend" x="310" y="192">https://www.w3.org/TR/ldn/</text></a><path d="M154.018 5.559v14.023h12.27V12.57h-7.01V5.56h-5.26zm7.012 0v5.258h5.259L166.03 5.56zm-5.259 3.505h1.753v1.753h-1.753V9.064zm0 3.506h1.753v1.753h-1.753V12.57zm0 3.506h7.012v1.753h-7.012v-1.753z"/><path d="m155.03056,108.76175 0,1.51758 12.14062,0 0,-1.51758 -12.14062,0 z m 0,3.03516 0,8.9628 c 0,0.0911 0.0516,0.14266 0.14266,0.14266 l 11.85682,0 c 0.0911,0 0.14265,-0.0516 0.14265,-0.14266 l 0,-8.9628 -4.50568,0 0,1.56461 -3.0822,0 0,-1.56461 -4.55274,0 z"/><path d="M154.02 174.407v14.01h12.257v-7.006h-7.004v-7.004h-5.254zm7.004 0v5.253h5.253l-5.253-5.253z"/><path d="M75.094 56.246c26.774-25.646 73.45-42.406 73.45-42.406M312.544 56.681c-26.774-25.646-73.449-42.406-73.449-42.406M76.48 66.868c26.774 25.646 73.45 42.406 73.45 42.406" fill="none" stroke="#000" stroke-width="1"/><path d="M312.898 70.757c-26.774 25.646-73.45 42.406-73.45 42.406" fill="none" stroke="#000" stroke-width="1"/><path d="M329.61 79.188c-15.293 56.301-41.953 93.091-41.953 93.091" fill="none" stroke="#000" stroke-width="1"/><path fill="none" stroke="#000" stroke-width="1" stroke-dasharray="3,6" d="M146.06 98.447h141V194.5h-141z"/><path d="M159.06 24.117c-7.82 39.778 0 76.156 0 76.156" fill="none" stroke="#000" stroke-width="1"/><path d="M144.901 17.027l5.702-2.075-5.702-2.076zM156.574 98.406l3.523 4.94.476-6.05zM238.698 111.024l-4.06 4.508 6.008-.843zM145.198 110.4l6.065.165-4.54-4.026zM240.493 16.762l-5.702-2.075 5.702-2.076zM286.493 170.237l-3.066 5.236 5.715-2.04zM156.767 165.375l3.524 4.94.476-6.05z" stroke="#000" stroke-width="1"/><path d="M160 124c-4.73 24.06 0 46.063 0 46.063" fill="none" stroke="#000" stroke-width="1"/></g></svg>

                <figcaption property="schema:name">From <cite><a href="https://www.w3.org/TR/ldn/linked-data-notifications-overview.svg">Overview of Linked Data Notifications</a></cite>, 2017</figcaption>
              </figure>

              <p class="todo">Is JSON-LD a hard requirement? Can’t clients and servers agree at runtime about the serialization?</p>

              <p class="todo">For example, the requirement for reusability could be seen as a potential risk for privacy; what is the benefit of reusable notifications to balance that risk? Who would benefit the most from this principle (users, application developers, other) and in what way? A similar discussion could be made for R3 (persistence and retrievability).</p>
              <p>Once fetched by a 3rd-party, any piece of information could potentially be subject to privacy. Hence, this is orthogonal to whether the notifications are ephemeral or persistent. In R4-C, we briefly touch on various authentication methods which could be used alongside LDN with the idea that notifications are not necessarily public but only visible or reusable by intended parties. The receivers decide (based on their use case) which consumers (based on any criteria) can reuse. They achieve this by setting authentication and authorization settings on the notifications.</p>

              <p class="todo">specialised senders/consumers?</p>
              <p class="todo">consistency checking (SHACL/ShEx?)</p>

              <p class="todo">If we want to decentralize this, the messages need to have a similar structure. So structure is an additional requirement of decentralization ?</p>
            </div>
          </section>

          <section id="decentralised-notifications-and-annotations" inlist="" rel="schema:hasPart" resource="decentralised-notifications-and-annotations">
            <h2 property="schema:name">Decentralised Notifications and Annotations</h2>
            <div datatype="rdf:HTML" property="schema:description">
              <p class="todo">This information discusses something broader than LDN. Should it move to the dokieli section? Some of it overlaps with <a href="http://csarven.ca/dokieli-rww#figure-dokieli-architecture-relations">http://csarven.ca/dokieli-rww#figure-dokieli-architecture-relations</a>.</p>

              <p>By using different arrangements of LDN, WA, AP, LDP mechanisms and related vocabularies, scholarly and social activities can be systematically discovered for a variety of use cases. Decentralised notifications and annotations surrounding an article can be determined as follows:</p>

              <ul>
                <li id="subject-annotation-service">Resource asserts the location of a preferred service for maintaining annotations about the the subject resource (via <code>oa:annotationService</code>) </li>
                <li id="subject-inbox">Resource asserts the location of a service that receives and serves notifications about the subject resource (via <code>ldp:inbox</code>)</li>
                <li id="profile-storage">An individual's profile asserting their preferred storage location (via <code>pim:storage</code>)</li>
                <li id="profile-outbox">An individual's profile asserting the location of their activities (via <code>as:outbox</code>)</li>
                <li id="profile-knows-profile-storage">Members of an individual's social graph (via eg. <code>foaf:knows</code>) asserting their preferred storage location</li>
                <li id="profile-knows-profile-outbox">Members of an individual's social graph asserting the location of their activities</li>
                <li id="inbox-annotation-known">Inbox or annotation service locations are known prior to interaction eg. trusted or used by a community.</li>
                <li id="inbox-annotation-manual">Inbox or annotation service locations are manually input to the system eg. not publicised or private.</li>
              </ul>

              <p>Applications can incrementally implement a combination of these approaches to discover distributed activities on the Web. Figure X depicts an interplay of decentralised personal profiles, notifications, and annotations.</p>

              <figure class="todo">
                <figcaption>Interplay of Personal Profiles, Notifications, and Annotations</figcaption>
              </figure>
            </div>
          </section>


          <section id="linked-specifications-reports" inlist="" rel="schema:hasPart" resource="#linked-specifications-reports">
            <h2 property="schema:name">Linked Specifications, Test Suites, and Implementation Reports</h2>
            <div datatype="rdf:HTML" property="schema:description">
              <p class="todo">The relevance of this section/work is about independent publishing (different jurisdictions) but following same line of Web standards / interop... pay-as-you-go... the sum is greater</p>

              <p>This article describes the semantic structure and linking of the W3C Recommendation <cite><a href="https://www.w3.org/TR/ldn/">Linked Data Notifications</a></cite> (LDN), its test suite, and implementation reports.</p>

              <p>Semantically interlinking and detailed machine-readability of components related to Web standards and their implementations is novel, and can be useful for coherently documenting software projects and their conformance with specifications. Everything presented here is open source and reusable by other specifications (W3C standards or not), test suites, and implementations.</p>

              <p>As a concrete example of the benefits of this approach, the LDN test suite is itself an LDN implementation for the purpose of automating the collection and aggregation of implementation reports which were used directly towards the formal standardisation process.</p>
            </div>
          </section>

          <section id="on-screen" inlist="" rel="schema:hasPart" resource="#on-screen">
            <h2 property="schema:name">On screen!</h2>
            <div datatype="rdf:HTML" property="schema:description">
              <p class="todo">Chapter discussion goes here</p>

              <p class="todo">What are the lessons learned? What would you do differently next time? How do your findings generalize to to other domains? What impact can this have (this is minimally stated) and why? What is needed/still needs to be done to have such an impact?</p>

              <blockquote cite="http://www.chakoteya.net/Voyager/613.htm">
                <dl>
                  <dt>Geordi La Forge</dt><dd>Captain, we are being hailed.</dd>
                  <dt>Captain Jean-Luc Picard</dt><dd>On screen... (he remembers there is no longer a viewscreen)... Open a channel.</dd>
                </dl>
                <footer><cite><a data-versiondate="2018-10-03T15:13:45Z" data-versionurl="https://web.archive.org/web/20181003151345/https://www.imsdb.com/scripts/Star-Trek-Nemesis.html" href="https://www.imsdb.com/scripts/Star-Trek-Nemesis.html">Star Trek: Nemesis</a></cite>, 2003</footer>
              </blockquote>

              <p>A decentralised notification system that using established semantic models enables discovery...</p>

              <p>Notifications are sent over the Web for a variety of purposes, for example, by social applications. The information contained within a notification is structured arbitrarily, and typically only usable by the application which generated them in the first place. In line with Linked Data, we propose that notifications should be reusable by different applications. Through separating the concepts of <em>senders</em>, <em>receivers</em> and <em>consumers</em> of notifications, and leveraging Linked Data principles of shared vocabularies and URIs, LDN provides a building block for decentralised Web applications. This permits end users more freedom to switch between the online tools they use, as well as generating greater value when notifications from different sources can be used in combination.</p>

              <p class="todo">What scenarios do you want to enable that are difficult or impossible today?</p>

              <p id="semantic-centralisation-of-notifications"><strong>Semantic Centralisation of Notifications</strong>: While LDN facilitates a decentralised architecture for notification exchange, it does not prescribe the structure and semantics of the notifications themselves. The composition of the notifications are unspecified to foster different kinds of applications to be built to communicate information in any domain. Consequently, organic centralisation of notification models can materialise in that domain-centric applications would create and consume what is meaningful to them in order to coordinate among themselves. This kind of centralisation of notification semantics is an inherent property of free expression, the Web at large, and human-communication.</p>

              <p class="todo">LDN serves as a building block rather than a complete solution for re-decentralisation. The three roles can be implemented independently from each other or all together in one system.</p>

              <p>We need to consider both the needs of software systems and humans when large amounts of notification data are being generated and shared between diverse applications which may be operating without knowledge of each other. To organise and manage large amount of notifications over time, mechanisms should be in place to break representations of collections of notifications into multiple paged responses that may be easier to consume by applications.</p>

              <p>Relatedly, receivers may carry out resource management or garbage collection, or permit consumers or other applications to do so. For example, an application to consume messages might let an authenticated and authorised user ‘mark as read’ by adding a triple to the notification contents.</p>

              <p>So far we have seen decentralised notifications applied in social networking scenarios, as well as for archival activities and scientific experiments through monitoring the state of online resources, datasets and files, or sensor outputs, and sending notifications when changes occur. We take a closer look at the LDN <a href="evaluation#linked-data-notifications-implementations">implementations</a> in the Evaluation section.</p>
            </div>
          </section>
        </div>

      </article>
    </main>
  </body>
</html>
